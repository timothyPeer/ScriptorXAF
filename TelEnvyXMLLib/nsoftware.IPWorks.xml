<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nsoftware.IPWorks</name>
    </assembly>
    <members>
        <member name="F:nsoftware.core.LoadCertificateForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:nsoftware.core.LoadCertificateForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:nsoftware.core.LoadCertificateForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.AtomTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.SetAtomData(System.Byte[],System.Int32,System.Int32)">
            <summary>The complete content of the Atom resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.DeleteResource(System.String)">
            <summary>Deletes the resource at the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.GetFeed(System.String)">
            <summary>Fetches an Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.GetProperty(System.String)">
            <summary>Fetches the value of a specific Atom feed element or attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.GetResource(System.String)">
            <summary>Fetches a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.PostResource(System.String)">
            <summary>Posts a resource to the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.PutResource(System.String)">
            <summary>Puts a resource to the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.ReadFile(System.String)">
            <summary>Load an Atom file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.Reset">
            <summary>Reset all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.SetProperty(System.String,System.String)">
            <summary>Sets the value of a specific Atom feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Atom.WriteFile(System.String)">
            <summary>Write an Atom feed from the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Atom.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Channel">
            <summary>The feed elements of a feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Entries">
            <summary>A collection of entries in the current Atom feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Namespaces">
            <summary>A collection of namespaces in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.UpdateEntry">
            <summary>An Atom entry to be updated, deleted or created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.AtomDataB">
            <summary>The complete content of the Atom resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.AtomData">
            <summary>The complete content of the Atom resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Slug">
            <summary>A header added to the HTTP request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.TransferredDataLimit">
            <summary>The maximum of bytes of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.UpdateFile">
            <summary>A resource to be updated, deleted or created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Atom.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavEventDetailsEventArgs">
            <summary>Event arguments for the EventDetails event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavFreeBusyEventArgs">
            <summary>Event arguments for the FreeBusy event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CaldavTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.AddCustomProperty(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.CopyCalendarEvent(System.String,System.String)">
            <summary>Copy events to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.CreateCalendar(System.String)">
            <summary>Creates a new calendar collection resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.DeleteCalendarEvent(System.String)">
            <summary>Delete a resource or collection.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.ExportICS">
            <summary>Generates an event from the properties in the iCal (.ICS) format.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.GetCalendarEvent(System.String)">
            <summary>Retrieves a single event from the CalDAV server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.GetCalendarOptions(System.String)">
            <summary>Retrieves options for the ResourceURI to determines whether it supports calendar access.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.GetCalendarReport(System.String)">
            <summary>Generates a report on the indicated calendar collection resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.GetFreeBusyReport(System.String)">
            <summary>Generates a report as to when the calendar owner is free and/or busy.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.ImportICS(System.String)">
            <summary>Imports iCal data (contained in an ICS file) into the component's property list.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.LockCalendar(System.String)">
            <summary>Obtain a lock for a specified calendar resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.MoveCalendarEvent(System.String,System.String)">
            <summary>Moves one calendar resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.PutCalendarEvent(System.String)">
            <summary>Adds a calendar resource at the specified ResourceURI using the CalDAV PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Caldav.UnLockCalendar(System.String)">
            <summary>Unlocks a calendar resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnEventDetails">
            <summary>Fires for each calendar event received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnFreeBusy">
            <summary>Fires for each Free/Busy element received in the response.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Caldav.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Alarms">
            <summary>An alarm related to the event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.CustomProperties">
            <summary>List of extra properties that may be used to extend the functionality of this component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.FreeBusy">
            <summary>Specifies the times when the calendar owner is free or busy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.LockProperties">
            <summary>Fields used when locking and unlocking a calendar resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Recurrence">
            <summary>Defines the recurrence set for the event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.ReportFilter">
            <summary>Criteria used to filter reports.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Timezone">
            <summary>Specifies a time zone on a calendar collection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Attendees">
            <summary>Defines one or more participants that have been invited to the event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Categories">
            <summary>Used to specify categories or subtypes of the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Classification">
            <summary>Defines the access classification for a calendar component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Completed">
            <summary>Date and time that a to-do was actually completed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Created">
            <summary>Date and time calendar information created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Depth">
            <summary>The depth associated with the current operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Description">
            <summary>Provides a complete description of the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.DisplayName">
            <summary>Provides the display name of the calendar being created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.DueDate">
            <summary>Specifies the due date for a calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Duration">
            <summary>Duration of the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.EndDate">
            <summary>Specifies the date and time that a calendar event ends.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.ETag">
            <summary>Identifier returned by the CalDAV server which is used to synchronize edits.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.EventType">
            <summary>Indicates the type of calendar object resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.LastModified">
            <summary>The date and time that the information associated with the calendar event was last revised in the calendar store.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Location">
            <summary>Defines the intended venue for the activity defined by a calendar component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Organizer">
            <summary>Defines the organizer of a calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Priority">
            <summary>Defines the relative priority for a calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Sequence">
            <summary>Defines the revision sequence number of the event within a sequence of revisions.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.StartDate">
            <summary>Specifies the date and time that an event begins.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Status">
            <summary>Defines the overall status or confirmation for the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Summary">
            <summary>Defines a short summary or subject for the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Timestamp">
            <summary>Specifies the date and time that the instance of the event was created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.Transparency">
            <summary>Defines whether or not an event is transparent to busy time searches.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.UID">
            <summary>A persistent, globally unique  identifier for the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.URL">
            <summary>Location of the event resource on the CalDAV server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Caldav.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CertmgrCertChainEventArgs">
            <summary>Event arguments for the CertChain event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CertmgrCertListEventArgs">
            <summary>Event arguments for the CertList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CertmgrErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CertmgrKeyListEventArgs">
            <summary>Event arguments for the KeyList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.CertmgrStoreListEventArgs">
            <summary>Event arguments for the StoreList event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.SetCertStore(System.Byte[],System.Int32,System.Int32)">
            <summary>The certificate store to search for certificates.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.CreateCertificate(System.String,System.Int32)">
            <summary>Creates a new self-signed certificate in the current store.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.CreateKey(System.String)">
            <summary>Creates a new keyset associated with the provided name.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.DeleteCertificate">
            <summary>Deletes the currently selected certificate from the store.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.DeleteKey(System.String)">
            <summary>Deletes the keyset associated with the provided name.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ExportCertificate(System.String,System.String)">
            <summary>Saves the current certificate to a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.GenerateCSR(System.String,System.String)">
            <summary>Generates a new CSR to be sent to a signing authority.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ImportCertificate(System.String,System.String,System.String)">
            <summary>Imports a certificate from a PFX file into the current certificate store.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ImportSignedCSR(System.Byte[],System.String)">
            <summary>Imports a signed CSR.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.IssueCertificate(System.String,System.Int32)">
            <summary>Creates a new certificate in the current store, signed by the selected certificate.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ListCertificateStores">
            <summary>Lists certificate stores.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ListKeys">
            <summary>List keysets in a CSP.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ListMachineStores">
            <summary>List machine certificate stores.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ListStoreCertificates">
            <summary>List certificates in a store.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ReadCertificate(System.String)">
            <summary>Loads a certificate from a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ReadCSR(System.String)">
            <summary>Reads a Certificate Signing Request (CSR).</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.Reset">
            <summary>Resets all certificate properties to their default values.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.SaveCertificate(System.String)">
            <summary>Saves the current certificate to a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.ShowCertificateChain">
            <summary>Show certificate chain.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certmgr.SignCSR(System.Byte[],System.Int32)">
            <summary>Creates a signed certificate from a CSR.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certmgr.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Certmgr.OnCertChain">
            <summary>Shows the certificate chain for the certificate (see the ShowCertificateChain method).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Certmgr.OnCertList">
            <summary>Lists the certificates in a store (see the ListStoreCertificates method).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Certmgr.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Certmgr.OnKeyList">
            <summary>Lists the keysets in a CSP (see the ListKeys method).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Certmgr.OnStoreList">
            <summary>Lists the system certificate stores (see the ListCertificateStores and ListMachineStores methods).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certmgr.Cert">
            <summary>The current selected certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certmgr.CertExtensions">
            <summary>A list of extensions used by the currently selected certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certmgr.CertStoreB">
            <summary>The certificate store to search for certificates.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certmgr.CertStore">
            <summary>The certificate store to search for certificates.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certmgr.CertStorePassword">
            <summary>The password for the certificate store (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certmgr.CertStoreType">
            <summary>The type of certificate store for CertStore .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.DnsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.DnsResponseEventArgs">
            <summary>Event arguments for the Response event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.GetFieldValue(System.Int32,System.String)">
            <summary>Get the value of the field indicated from a record.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.Query(System.String)">
            <summary>Query a Domain.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Dns.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Dns.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Dns.OnResponse">
            <summary>Fires after a DNS query.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Records">
            <summary>Collection of records in the last response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.DNSPort">
            <summary>The port to connect to on the DNS Server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.DNSServer">
            <summary>The address of the DNS server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.QueryType">
            <summary>The record type to query.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RecordSource">
            <summary>The source of records provided in the Records properties.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Recursive">
            <summary>Determines whether to ask the DNSServer to recursively query other servers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.RequestId">
            <summary>The ID of the current DNS request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Status">
            <summary>A standard string interpretation of StatusCode .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.StatusCode">
            <summary>The success or error code for the DNS query.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Dns.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FilemailerTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.AddAttachment(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Disconnect">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Queue(System.String)">
            <summary>Queues the message into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.Send">
            <summary>Sends the current message and MIME encoded attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Filemailer.SetMessageStream(System.IO.Stream)">
            <summary>Sets the stream to be uploaded to the server as part of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Filemailer.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Attachments">
            <summary>The paths of files to attach to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MessageRecipients">
            <summary>The collection of recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.AuthMechanism">
            <summary>Used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.DeliveryNotificationTo">
            <summary>Email address to send to which to send a delivery notification.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MessageDate">
            <summary>Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MessageId">
            <summary>The Message Identifier for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.MessageText">
            <summary>The full text of the message to send (without headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Password">
            <summary>A password for logon to the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.ReplyTo">
            <summary>A mail address to which to reply (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Filemailer.User">
            <summary>A user identifier to login as in the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpDirListEventArgs">
            <summary>Event arguments for the DirList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.FtpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Abort">
            <summary>Abort Current Upload/Download.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Append">
            <summary>Append data from LocalFile to a RemoteFile on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.DeleteFile(System.String)">
            <summary>Remove a file specified by FileName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Download">
            <summary>Download a RemoteFile from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.ListDirectory">
            <summary>List the current directory specified by RemotePath on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.ListDirectoryLong">
            <summary>List extended directory information for RemotePath .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Logoff">
            <summary>Logoff from the FTP server by posting a QUIT command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Logon">
            <summary>Logon to the FTP RemoteHost using the current User and Password .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.MakeDirectory(System.String)">
            <summary>Create a directory on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.RemoveDirectory(System.String)">
            <summary>Remove a directory specified by DirName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.RenameFile(System.String)">
            <summary>Change the name of RemoteFile to NewName .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.SetDownloadStream(System.IO.Stream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.SetUploadStream(System.IO.Stream)">
            <summary>Sets the stream from which the component will read data to upload to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.StoreUnique">
            <summary>Upload a file with a Unique Name to an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ftp.Upload">
            <summary>Upload a file specified by LocalFile to an FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnDirList">
            <summary>Fired when a directory entry is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnEndTransfer">
            <summary>Fired when a file completes downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnPITrail">
            <summary>Traces the commands sent to the server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnStartTransfer">
            <summary>Fired when a file starts downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ftp.OnTransfer">
            <summary>Fired during file download/upload.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.DirList">
            <summary>Collection of entries resulting in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Account">
            <summary>The user account to login with.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FileExists">
            <summary>Returns True if the file specified by RemoteFile exists on the remote server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FileSize">
            <summary>The size of the file pointed to by RemoteFile .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.FileTime">
            <summary>The last modification time of the file pointed to by RemoteFile .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.LocalFile">
            <summary>The path to a local file for download/upload.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Overwrite">
            <summary>Indicates whether or not the component should overwrite files during transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Passive">
            <summary>Controls whether to direct the server into passive mode.  Recommended if behind a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Password">
            <summary>The password to log in.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemoteFile">
            <summary>The name of the remote file for uploading, downloading, etc.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemoteHost">
            <summary>The domain name or IP address of the FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemotePath">
            <summary>The current path in the FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.RemotePort">
            <summary>The port for the FTP service (default is 21).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.StartByte">
            <summary>The byte index in RemoteFile and LocalFile from which to start the transmission.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.TransferMode">
            <summary>The transfer mode (ASCII or Binary).  If the value is 0 (default), the initial server mode will be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ftp.User">
            <summary>The user identifier to use for login.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HtmlmailerTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.AddAttachment(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Disconnect">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Queue(System.String)">
            <summary>Queues the message into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.Send">
            <summary>Sends the current message and MIME encoded attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Htmlmailer.SetMessageHTMLStream(System.IO.Stream)">
            <summary>Sets the stream from which the component will read the HTML version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Htmlmailer.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Attachments">
            <summary>The paths of files to attach to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Images">
            <summary>The embedded images in the HTML message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageRecipients">
            <summary>The collection of recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.AuthMechanism">
            <summary>Used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.DeliveryNotificationTo">
            <summary>Email address to send to which to send a delivery notification.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.HTMLFile">
            <summary>The path to a local HTML file.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageDate">
            <summary>Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageHTML">
            <summary>The HTML version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageId">
            <summary>The Message Identifier for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.MessageText">
            <summary>The plain text version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ParseHTML">
            <summary>Controls the behavior of the MessageHTML property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Password">
            <summary>A password for logon to the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.ReplyTo">
            <summary>A mail address to which to reply (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Htmlmailer.User">
            <summary>A user identifier to login as in the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.HttpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.SetPostData(System.Byte[],System.Int32,System.Int32)">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Delete(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Get(System.String)">
            <summary>Fetch the document using the HTTP GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Head(System.String)">
            <summary>Fetches the document headers using the HTTP HEAD method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Post(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.ResetHeaders">
            <summary>Resets all HTTP Headers, Cookies, LocalFile , and AttachedFile .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.SetDownloadStream(System.IO.Stream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Http.SetUploadStream(System.IO.Stream)">
            <summary>Sets the stream to be uploaded to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Http.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.AllowHTTPCompression">
            <summary>Enables HTTP compression for receiving data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.AttachedFile">
            <summary>A file to append to PostData if the POST or PUT methods are used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.HTTPMethod">
            <summary>The HTTP method used for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.HTTPVersion">
            <summary>The HTTP Version used by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.PostDataB">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.PostData">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Pragma">
            <summary>A browser/server specific header line (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Range">
            <summary>The byte-range to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URL">
            <summary>The URL to fetch.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLPath">
            <summary>The path for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLPort">
            <summary>The port for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLScheme">
            <summary>The scheme for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.URLServer">
            <summary>The server for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Http.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IcmpportDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IcmpportErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IcmpportReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Icmpport.Send(System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Icmpport.OnDataIn">
            <summary>Fired when new ICMP messages come in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Icmpport.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Icmpport.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.Active">
            <summary>Enables or disables sending and receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.DataToSendB">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.DataToSend">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.DontRoute">
            <summary>If set to True, it forces the socket to send data directly to interface (no routing).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.MessageSubType">
            <summary>The subtype of the ICMP message (part of the ICMP header).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.MessageType">
            <summary>The type of the ICMP message (part of the ICMP header).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.RemoteHost">
            <summary>The address of the RemoteHost.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Icmpport.TimeToLive">
            <summary>The time to live (TTL) value for the ICMP packets sent by the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapIdleInfoEventArgs">
            <summary>Event arguments for the IdleInfo event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMailboxACLEventArgs">
            <summary>Event arguments for the MailboxACL event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMailboxListEventArgs">
            <summary>Event arguments for the MailboxList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMessageInfoEventArgs">
            <summary>Event arguments for the MessageInfo event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapMessagePartEventArgs">
            <summary>Event arguments for the MessagePart event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.ImapTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SetMessage(System.Byte[],System.Int32,System.Int32)">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.AddMessageFlags(System.String)">
            <summary>Adds the specified flags to the messages specified by MessageSet .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.AppendToMailbox">
            <summary>Appends the message in MessageText to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CheckMailbox">
            <summary>Sends a 'CHECK' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CloseMailbox">
            <summary>Removes all messages marked with 'Deleted' flag from the currently selected mailbox and unselect mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Connect">
            <summary>Connects to an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CopyToMailbox">
            <summary>Copies the messages specified by MessageSet to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.CreateMailbox">
            <summary>Creates a new mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DeleteFromMailbox">
            <summary>Marks the messages specified by MessageSet as deleted.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DeleteMailbox">
            <summary>Deletes a mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DeleteMailboxACL(System.String)">
            <summary>Deletes mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Disconnect">
            <summary>Disconnects from an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ExamineMailbox">
            <summary>Selects a Mailbox (Read-only mode).</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ExpungeMailbox">
            <summary>Removes all messages marked with 'Deleted' flag from the currently selected mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessageHeaders">
            <summary>Retrieves the message headers of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessageInfo">
            <summary>Retrieves information about messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessagePart(System.String)">
            <summary>Retrieves the message part specified by PartID.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessagePartHeaders(System.String)">
            <summary>Retrieves the headers of message part specified by PartID.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.FetchMessageText">
            <summary>Retrieves the message text of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.GetMailboxACL">
            <summary>Retrieves mailbox access control rights.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ListMailboxes">
            <summary>Lists all mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ListSubscribedMailboxes">
            <summary>Lists all subscribed mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.MoveToMailbox">
            <summary>Moves the messages specified by MessageSet to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Noop">
            <summary>Sends a 'NOOP' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.RenameMailbox(System.String)">
            <summary>Change the name of Mailbox to NewName .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.ResetMessageFlags">
            <summary>Replaces the flags of the messages specified by MessageSet with the flags specified by MessageFlags .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SearchMailbox(System.String)">
            <summary>Search selected mailbox for specified text.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SelectMailbox">
            <summary>Select a Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SetMailboxACL(System.String,System.String)">
            <summary>Sets mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SetMessageStream(System.IO.Stream)">
            <summary>Sets the stream to which the message (or message part) downloaded from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.StartIdle">
            <summary>Begins idling.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.StopIdle">
            <summary>Stops idling.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.SubscribeMailbox">
            <summary>Subscribes to the mailbox specified by Mailbox .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.UnsetMessageFlags">
            <summary>Removes the flags specified by MessageFlags from the messages specified by MessageSet .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Imap.UnsubscribeMailbox">
            <summary>Unsubscribes from the mailbox specified by Mailbox .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnEndTransfer">
            <summary>Fired when the message or the part data finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnIdleInfo">
            <summary>Fires whenever responses from the server are received while idling.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMailboxACL">
            <summary>Fires for each set of access control rights returned by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMailboxList">
            <summary>Fired for each mailbox received through the ListMailboxes and ListSubscribedMailboxes methods.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMessageInfo">
            <summary>Fired with information for the message(s) retrieved by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnMessagePart">
            <summary>Fired for each message part when FetchMessageInfo is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnStartTransfer">
            <summary>Fired when the message or the part data starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Imap.OnTransfer">
            <summary>Fired while the message gets transferred from the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MailboxList">
            <summary>Collection of mailboxes listed by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageHeaders">
            <summary>Collection of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageInfo">
            <summary>Collection of messages retrieved by FetchMessageInfo .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageParts">
            <summary>Collection of message parts collected by FetchMessageInfo .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageRecipients">
            <summary>Collection of recipients for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.AutoDecodeParts">
            <summary>Determines whether to automatically decode message parts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.EndByte">
            <summary>The byte index of the position where the transfer should end.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.LocalFile">
            <summary>The path to a local file for downloading the message body.  If the file exists, it is overwritten (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Mailbox">
            <summary>Name of the mailbox selected on the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MailboxFlags">
            <summary>Defines flags in the selected mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MailPort">
            <summary>The port of the IMAP server (default is 143).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MailServer">
            <summary>The name or address of the mail server (IMAP server).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageB">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Message">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageContentEncoding">
            <summary>The ContentEncoding of the selected message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageContentType">
            <summary>The ContentType of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageCount">
            <summary>The total number of messages on the Mailbox .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageDate">
            <summary>The time the message was created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageDeliveryTime">
            <summary>The time the message was delivered to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageFlags">
            <summary>Contains the flags of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageFrom">
            <summary>The address of the author of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageHeadersString">
            <summary>String version of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageId">
            <summary>The message identifier of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageInReplyTo">
            <summary>The unique message identifier of the message this one is in reply to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageNetId">
            <summary>The globally unique identifier of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageReplyTo">
            <summary>Email address(s) where replies to the message should be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSender">
            <summary>The address of the sender of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSet">
            <summary>The set of messages to operate on.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSize">
            <summary>The size of the selected message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageSubject">
            <summary>The subject of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.MessageText">
            <summary>The body of the retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Overwrite">
            <summary>Indicates whether or not the component should overwrite files during transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Password">
            <summary>The password used to authenticate to the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.PeekMode">
            <summary>When set to True, the message Seen flag is not changed during reading.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.RecentMessageCount">
            <summary>Number of new messages in the Mailbox .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SortCriteria">
            <summary>Sorts criteria to use for message retrieval operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.StartByte">
            <summary>The byte index of the position where the transfer should start.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.UIDMode">
            <summary>If true, permanent message identifiers are used instead of the default temporary identifiers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.UIDValidity">
            <summary>The UIDValidity parameter sent from the server in response to SelectMailbox command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Imap.User">
            <summary>The user name used to authenticate to the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonConnectionRequestEventArgs">
            <summary>Event arguments for the ConnectionRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonSSLClientAuthenticationEventArgs">
            <summary>Event arguments for the SSLClientAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpdaemonSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.SetDefaultEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>A default EOL value to be used by incoming connections.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Disconnect(System.String)">
            <summary>Disconnect the specified client.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Interrupt(System.String)">
            <summary>Interrupts a synchronous send to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Send(System.String,System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.SendFile(System.String,System.String)">
            <summary>Send file to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.SendLine(System.String,System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.Shutdown">
            <summary>Shuts down the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipdaemon.StartSSL(System.String)">
            <summary>Starts SSL negotiation on a connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnConnectionRequest">
            <summary>Fired when a request for connection comes from a remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnDataIn">
            <summary>Fired when data comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnSSLClientAuthentication">
            <summary>Fired when the client presents its credentials to the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipdaemon.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.Connections">
            <summary>A collection of currently connected clients.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.ConnectionBacklog">
            <summary>The maximum number of pending connections maintained by the TCP/IP subsystem.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DefaultEOLB">
            <summary>A default EOL value to be used by incoming connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DefaultEOL">
            <summary>A default EOL value to be used by incoming connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DefaultIdleTimeout">
            <summary>The default idle timeout for inactive clients.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DefaultMaxLineLength">
            <summary>The default maximum line length value for inbound connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DefaultSingleLineMode">
            <summary>Tells the component whether or not to treat new connections as line-oriented.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.DefaultTimeout">
            <summary>An initial timeout value to be used by incoming connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.Listening">
            <summary>If True, the component accepts incoming connections on LocalPort.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.LocalPort">
            <summary>The TCP port in the local host where the component listens.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.SSLAuthenticateClients">
            <summary>If true, the server asks the client(s) for a certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipdaemon.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpinfoDNSCacheEntryEventArgs">
            <summary>Event arguments for the DNSCacheEntry event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpinfoErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpinfoRequestCompleteEventArgs">
            <summary>Event arguments for the RequestComplete event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.DHCPRelease">
            <summary>Releases the IP Address of the current adapter specified by AdapterIndex .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.DHCPRenew">
            <summary>Renews the IP Address of the current adapter specified by AdapterIndex .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.DisplayDNSCache">
            <summary>Displays cached DNS entries.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.FlushDNSCache">
            <summary>Flush the DNS cache.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.GetMAC(System.String)">
            <summary>Returns the MAC address of the network interface at IPAddress .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.Reset">
            <summary>Resets the component, stopping all pending requests and refreshing network information.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.ResolveAddress(System.String)">
            <summary>Resolves an IP address.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipinfo.ResolveName(System.String)">
            <summary>Resolves a host name.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipinfo.OnDNSCacheEntry">
            <summary>Fires once for each cached DNS entry.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipinfo.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipinfo.OnRequestComplete">
            <summary>Fired after an asynchronous request completes.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterBroadcastAddress">
            <summary>The broadcast address of the adapter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterCount">
            <summary>The number of adapters in the system.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDescription">
            <summary>The description of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDeviceIndex">
            <summary>The system index of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDHCPEnabled">
            <summary>Shows whether or not the adapter identified by AdapterIndex has DHCP Enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDHCPServer">
            <summary>The DHCP server of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterDNSServers">
            <summary>The DNS server list for the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterGateway">
            <summary>The default gateway of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterIndex">
            <summary>Sets the current adapter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterIPAddress">
            <summary>The IP address of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterIPv6Address">
            <summary>The IPv6 address of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterLeaseExpires">
            <summary>The expiration date and time of the lease obtained by the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterLeaseObtained">
            <summary>The date and time of when the current lease was obtained by the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterName">
            <summary>The name of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterOtherIPAddresses">
            <summary>Other IP addresses leased by the adapter specified by AdapterIndex , if any.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterPhysicalAddress">
            <summary>The physical address of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterPrimaryWINSServer">
            <summary>The primary WINS server of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterSecondaryWINSServer">
            <summary>The secondary WINS server of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterSubnetMask">
            <summary>The subnet of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterType">
            <summary>The type of adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterUsesWINS">
            <summary>Shows whether or not the adapter identified by AdapterIndex uses WINS.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.AdapterZoneId">
            <summary>The zone Id of the adapter identified by AdapterIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ARPProxy">
            <summary>Shows whether the local computer is acting as an ARP proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DHCPScope">
            <summary>The DHCP Scope of the DHCP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DNSEnabled">
            <summary>Shows whether DNS is enabled on the local computer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DNSServer">
            <summary>The address of the DNS Server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.DomainName">
            <summary>The current network domain on which the system resides.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.HostAddress">
            <summary>An Internet Address in dotted format.  When set, it initiates a search for the corresponding host name.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.HostAliases">
            <summary>Other names corresponding to the host with the name HostName.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.HostName">
            <summary>The Domain Name of an Internet host.  When set, it initiates a search for the corresponding address(es).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.LocalHost">
            <summary>The name of the local host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.NodeType">
            <summary>The type of node for the system.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.OtherAddresses">
            <summary>Other addresses for the host identified by HostName (for multihomed hosts).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.OtherDNSServers">
            <summary>Other DNS servers configured for the host machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.PendingRequests">
            <summary>The number of requests awaiting completion.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.RequestId">
            <summary>The handle of the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.RoutingEnabled">
            <summary>Shows whether routing is enabled on the local computer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServiceAliases">
            <summary>Other names by which the service specified by ServiceName / ServicePort is known.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServiceName">
            <summary>A name for a service.  When set, it initiates a search for the corresponding port number and protocol.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServicePort">
            <summary>A port number for a service.  When set, it initiates a search for the corresponding service name and protocol.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipinfo.ServiceProtocol">
            <summary>The protocol of the service specified by ServiceName / ServicePort .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpmonitorErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpmonitorIPAddressEventArgs">
            <summary>Event arguments for the IPAddress event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpmonitorIPPacketEventArgs">
            <summary>Event arguments for the IPPacket event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.ListIPAddresses">
            <summary>Lists the valid IP addresses for this host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.ParsePcapFile(System.String)">
            <summary>Parses the specified pcap file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipmonitor.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipmonitor.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipmonitor.OnIPAddress">
            <summary>Fired for each valid IP address on this host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipmonitor.OnIPPacket">
            <summary>Fired whenever a packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.AcceptData">
            <summary>Enables or disables data reception (the IPPacket event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.Active">
            <summary>Enables or disables network monitoring.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.IPPacketB">
            <summary>The contents of the current packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.IPPacket">
            <summary>The contents of the current packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipmonitor.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.IpportSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SetEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Connect(System.String,System.Int32)">
            <summary>Connects to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Disconnect">
            <summary>Disconnects from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.GetLine">
            <summary>Gets a line of text from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Interrupt">
            <summary>Interrupts the current action.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.Send(System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SendFile(System.String)">
            <summary>Sends file to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SendLine(System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SetReceiveStream(System.IO.Stream)">
            <summary>Sets the stream to which received data will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.SetSendStream(System.IO.Stream)">
            <summary>Reads content from the stream and sends it to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ipport.StartSSL">
            <summary>starts SSL negotiation on a plaintext connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnDataIn">
            <summary>Fired when data (complete lines) comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ipport.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.Connected">
            <summary>Triggers a connection or disconnection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.DataToSendB">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.DataToSend">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.EOLB">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.EOL">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.LocalPort">
            <summary>The TCP port in the local host where IPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.ReadyToSend">
            <summary>Indicates whether the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.RecordLength">
            <summary>The length of received data records.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.RemotePort">
            <summary>The TCP port in the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.SingleLineMode">
            <summary>Special mode for line-oriented protocols.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ipport.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.JsonCharactersEventArgs">
            <summary>Event arguments for the Characters event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.JsonEndElementEventArgs">
            <summary>Event arguments for the EndElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.JsonErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.JsonIgnorableWhitespaceEventArgs">
            <summary>Event arguments for the IgnorableWhitespace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.JsonJSONEventArgs">
            <summary>Event arguments for the JSON event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.JsonStartElementEventArgs">
            <summary>Event arguments for the StartElement event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.EndArray">
            <summary>Writes the closing bracket of a JSON array.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.EndObject">
            <summary>Writes the closing brace of a JSON object.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.Flush">
            <summary>Flushes the parser's or writer's buffers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.LoadSchema(System.String)">
            <summary>Load the JSON schema.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.Parse">
            <summary>This method parses the specified JSON data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.PutComment(System.String)">
            <summary>Writes a comment to the JSON document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.PutName(System.String)">
            <summary>Writes the name of a property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.PutProperty(System.String,System.String,System.Int32)">
            <summary>Write a property and value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.PutRaw(System.String)">
            <summary>Writes a raw JSON fragment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.PutValue(System.String,System.Int32)">
            <summary>Writes a value of a property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.Remove">
            <summary>Removes the current.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.Reset">
            <summary>Resets the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.Save">
            <summary>Saves the JSON data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.SetInputStream(System.IO.Stream)">
            <summary>Sets the stream from which the component will read data to parse.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.SetOutputStream(System.IO.Stream)">
            <summary>The stream to which the component will write the JSON.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.StartArray">
            <summary>Writes the opening bracket of a JSON array.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.StartObject">
            <summary>Writes the opening brace of a JSON object.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Json.TryXPath(System.String)">
            <summary>Navigates to the specified XPath if it exists.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Json.OnCharacters">
            <summary>Fired for plain text segments of the input stream.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Json.OnEndElement">
            <summary>Fired when an end-element tag is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Json.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Json.OnIgnorableWhitespace">
            <summary>Fired when a section of ignorable whitespace is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Json.OnJSON">
            <summary>Fires with the JSON data being written.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Json.OnStartElement">
            <summary>Fired when a new element is encountered in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XChildren">
            <summary>Collection of child elements of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XComments">
            <summary>A collection of comments of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.BuildDOM">
            <summary>When True, an internal object model of the JSON document is created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.InputData">
            <summary>The JSON data to parse.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.InputFile">
            <summary>The file to process.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.OutputData">
            <summary>The output JSON after processing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.OutputFile">
            <summary>The path to a local file where the output will be written.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.Overwrite">
            <summary>Indicates whether or not the component should overwrite files.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.Validate">
            <summary>When True, the parser checks that the document consists of well-formed XML.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XElement">
            <summary>The name of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XElementType">
            <summary>Indicates the data type of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XErrorPath">
            <summary>An XPath to check the server response for errors.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XParent">
            <summary>The parent of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XPath">
            <summary>Provides a way to point to a specific element in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XSubTree">
            <summary>A snapshot of the current element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Json.XText">
            <summary>The text of the current element.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapExtendedResponseEventArgs">
            <summary>Event arguments for the ExtendedResponse event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapResultEventArgs">
            <summary>Event arguments for the Result event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSearchCompleteEventArgs">
            <summary>Event arguments for the SearchComplete event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSearchPageEventArgs">
            <summary>Event arguments for the SearchPage event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSearchResultEventArgs">
            <summary>Event arguments for the SearchResult event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSearchResultReferenceEventArgs">
            <summary>Event arguments for the SearchResultReference event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.LdapSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Abandon(System.Int32)">
            <summary>Asks the server to abandon a request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Add">
            <summary>Adds an entry specified by DN to the directory server using the type and value attributes defined in the Attributes properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Attr(System.String)">
            <summary>Returns the value of the specified LDAP attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Bind">
            <summary>Connects and binds to the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Compare">
            <summary>Compares attributes and values with those of the entry specified by DN .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Delete">
            <summary>Deletes an entry specified by DN from the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.ExtendedRequest(System.String,System.Byte[])">
            <summary>Performs an LDAP V3 Extended Operation.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Modify">
            <summary>Performs an LDAP 'modify' operation on the entry specified by DN .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.ModifyRDN(System.String)">
            <summary>Performs an LDAP 'modify RDN' operation an entry specified by DN .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.MoveToDN(System.String)">
            <summary>Performs an LDAP 'modify' operation on the entry specified by DN by changing its superior.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Search(System.String)">
            <summary>Searches the directory server using the base object specified in DN and the search filter SearchFilter .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ldap.Unbind">
            <summary>Unbinds from the directory server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnExtendedResponse">
            <summary>Fired for LDAP V3 Extended Responses.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnPITrail">
            <summary>Provides detailed information about the interaction with the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnResult">
            <summary>Fired for every server response, except search responses.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSearchComplete">
            <summary>Fired upon completion of a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSearchPage">
            <summary>Fired for every page returned from a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSearchResult">
            <summary>Fired for every entry returned from a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSearchResultReference">
            <summary>Fired for every result reference returned from a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ldap.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Attributes">
            <summary>Attributes for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.References">
            <summary>Collection of references returned from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AcceptData">
            <summary>Enables or disables data reception from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.DeleteOldRDN">
            <summary>Controls whether the old RDN (Relative Distinguished Name) should be deleted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.DN">
            <summary>The Distinguished Name used as the base for LDAP operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.LDAPVersion">
            <summary>The version of LDAP used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.MessageId">
            <summary>The message identifier for the next LDAP request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.PageSize">
            <summary>The maximum number of results per page for the Search method.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Password">
            <summary>The password used to authenticate to the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ResultCode">
            <summary>The result code returned in the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ResultDescription">
            <summary>The descriptive text returned in the last server response (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ResultDN">
            <summary>The Distinguished Name returned in the last server response (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchDerefAliases">
            <summary>Controls alias dereferencing during searching.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchReturnValues">
            <summary>Controls whether the search operation returns values of  attributes, or only types.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchScope">
            <summary>Controls the scope of LDAP search operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchSizeLimit">
            <summary>Maximum number of entries that can be returned by the next search  operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SearchTimeLimit">
            <summary>A time limit for the next search operation (in seconds).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ServerName">
            <summary>The name or address of the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.ServerPort">
            <summary>The server port for the LDAP connection (default is 389).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SortAttributes">
            <summary>A string of attribute names to sort on with optional relative matching rules.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ldap.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.McastDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.McastErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.McastReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host. Write-only property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mcast.Send(System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mcast.OnDataIn">
            <summary>Fired when data is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mcast.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mcast.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.Active">
            <summary>Enables or disables sending and receiving data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.DataToSendB">
            <summary>A string of data to be sent to the remote host. Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.DataToSend">
            <summary>A string of data to be sent to the remote host. Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.LocalPort">
            <summary>The UDP port in the local host where MCast binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.Loopback">
            <summary>Enables or disables loopback of data sent to the multicast group.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.MulticastGroup">
            <summary>Multicast group to join or leave.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.ReceiveInterface">
            <summary>The interface with which to receive multicast packets. If empty, default is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.RemoteHost">
            <summary>The address of the remote host (multicast group).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.RemotePort">
            <summary>The UDP port in the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.SendInterface">
            <summary>The interface from which multicast packets are sent. If empty, default is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mcast.TimeToLive">
            <summary>The maximum number of subnets that a multicast datagram can traverse.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MimeErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MimeHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MimeProgressEventArgs">
            <summary>Event arguments for the Progress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.SetMessage(System.Byte[],System.Int32,System.Int32)">
            <summary>Contains the encoded message text or a path to a file which contains the encoded message text.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.DecodeFromFile">
            <summary>Decodes from file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.DecodeFromStream(System.IO.Stream)">
            <summary>Decodes from stream.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.DecodeFromString">
            <summary>Decodes from string.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.EncodeToFile">
            <summary>Encodes to file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.EncodeToStream(System.IO.Stream)">
            <summary>Encodes to stream.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.EncodeToString">
            <summary>Encodes to string.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mime.ResetData">
            <summary>Resets the values of all headers and Part- properties.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mime.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mime.OnHeader">
            <summary>Fired every time a header is parsed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mime.OnProgress">
            <summary>Shows the progress of decoding/encoding the input data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.MessageHeaders">
            <summary>The headers of the MIME message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.Parts">
            <summary>Contains information about all parts of a MIME message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.Boundary">
            <summary>The boundary separating the MIME parts. Maximum length of 80 bytes.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.ContentType">
            <summary>The value of the content-type header of the message which was encoded/decoded.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.ContentTypeAttr">
            <summary>The attributes for content-type header of the message which was encoded/decoded.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.MessageB">
            <summary>Contains the encoded message text or a path to a file which contains the encoded message text.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.Message">
            <summary>Contains the encoded message text or a path to a file which contains the encoded message text.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mime.MessageHeadersString">
            <summary>String version of the MIME message headers.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MxErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.MxResponseEventArgs">
            <summary>Event arguments for the Response event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mx.Resolve(System.String)">
            <summary>Resolves an email address.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mx.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Mx.OnResponse">
            <summary>Fired for each MailServer accepting email for the domain.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.DNSPort">
            <summary>The port where the DNS server is listening.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.DNSServer">
            <summary>The address of the DNS server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.MailServer">
            <summary>Mail server with lowest precedence value (lowest cost to reach).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.RequestId">
            <summary>Identifies each request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.Status">
            <summary>Status of the request is empty while in progress, 'OK' or error message upon completion.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mx.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetclockErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.GetAndSetTime">
            <summary>Same as the GetTime method, but system clock is also set to the received time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.GetTime">
            <summary>Sends a time request to the TimeServer to get the current time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netclock.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netclock.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.LocalTime">
            <summary>The time returned by the TimeServer converted to local time.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.Protocol">
            <summary>The protocol used by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.ServerTime">
            <summary>The time returned by the TimeServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.TimePort">
            <summary>The UDP port where the remote Time server is listening.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netclock.TimeServer">
            <summary>The time server from which to request the time.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetcodeErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetcodeProgressEventArgs">
            <summary>Event arguments for the Progress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.SetDecodedData(System.Byte[],System.Int32,System.Int32)">
            <summary>The decoded data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.SetEncodedData(System.Byte[],System.Int32,System.Int32)">
            <summary>The encoded data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.Decode">
            <summary>Decode string.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.Encode">
            <summary>Encode the data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.ResetData">
            <summary>Resets the values of all data and stream properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.SetInputStream(System.IO.Stream)">
            <summary>The input stream of data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netcode.SetOutputStream(System.IO.Stream)">
            <summary>The output stream of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netcode.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netcode.OnProgress">
            <summary>Occurs when PercentDone of the input is read.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.DecodedDataB">
            <summary>The decoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.DecodedData">
            <summary>The decoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.DecodedFile">
            <summary>The filename of the decoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.EncodedDataB">
            <summary>The encoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.EncodedData">
            <summary>The encoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.EncodedFile">
            <summary>Filename of the encoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.FileCnt">
            <summary>Shows the number of encoded files the component has read from or written into.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.FileName">
            <summary>The destination filename for the encoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.Format">
            <summary>The type of encoding to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.Mode">
            <summary>The UNIX-style filemode when uuencoding / uudecoding.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.Overwrite">
            <summary>Controls whether created file(s) should overwrite already existing file(s).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netcode.ProgressStep">
            <summary>Controls the granularity at which the Progress event is fired.  Values 0-100.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialConnectedEntryEventArgs">
            <summary>Event arguments for the ConnectedEntry event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialDeviceEventArgs">
            <summary>Event arguments for the Device event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialPhonebookEntryEventArgs">
            <summary>Event arguments for the PhonebookEntry event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NetdialStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Connect">
            <summary>Attempts to dial the PhonebookEntry from Phonebook .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.CreateEntry">
            <summary>Creates a PhonebookEntry .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.DeleteEntry">
            <summary>Deletes a PhonebookEntry .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Disconnect">
            <summary>Disconnects the last successfully made connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ListConnections">
            <summary>Lists all current connections.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ListDevices">
            <summary>Lists all dial devices.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ListPhonebook">
            <summary>Lists all entries in Phonebook .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Netdial.ShowDialDialog">
            <summary>Shows the standard RAS dialog for dialing the PhonebookEntry from Phonebook .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnConnectedEntry">
            <summary>Fired for every connected device when the ListConnections method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnDevice">
            <summary>Fired for every dial device when the ListDevices method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnPhonebookEntry">
            <summary>Fired for every Phonebook entry when the ListPhonebook method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Netdial.OnStatus">
            <summary>Fired during connection or disconnection attempts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.CallbackNumber">
            <summary>The callback number to give when directly dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Domain">
            <summary>The name of the domain to join when dialing the RAS connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryDeviceName">
            <summary>The device of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryDeviceType">
            <summary>The device type of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryDNSServer">
            <summary>The DNS server of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryIPAddress">
            <summary>The IP address of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryPhoneNumber">
            <summary>The phone number for the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.EntryWINSServer">
            <summary>The WINS server of the phonebook entry pointed to by PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Handle">
            <summary>The handle of the connection. 0 if invalid or not connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Password">
            <summary>The password to use when direct dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Phonebook">
            <summary>This property reads the PhonebookEntry when dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.PhonebookEntry">
            <summary>The name of PhonebookEntry to use when dialing the remote machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.PhoneNumber">
            <summary>The number to dial when directly dialing the remote machine without the help of a PhonebookEntry .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.RASAvailable">
            <summary>When true, Remote Access System (RAS) is available on the system.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Netdial.User">
            <summary>The name of the login user when directly dialing the remote machine.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpGroupListEventArgs">
            <summary>Event arguments for the GroupList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpGroupOverviewEventArgs">
            <summary>Event arguments for the GroupOverview event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpGroupSearchEventArgs">
            <summary>Event arguments for the GroupSearch event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.NntpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Connect">
            <summary>Connects to the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Disconnect">
            <summary>Disconnects from the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.FetchArticle">
            <summary>Get the headers and body of an article specified in CurrentArticle .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.FetchArticleBody">
            <summary>Gets only the body of an article specified in CurrentArticle .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.FetchArticleHeaders">
            <summary>Gets only the headers of an article specified in CurrentArticle .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.GroupOverview">
            <summary>Receives an overview for the articles in range OverviewRange in the CurrentGroup .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.GroupSearch">
            <summary>Receives an overview for the articles in range SearchRange in the CurrentGroup .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.ListGroups">
            <summary>Lists all groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.ListNewGroups">
            <summary>Lists all new groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.PostArticle">
            <summary>Posts the current article and attached file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.ResetHeaders">
            <summary>Resets all of the article headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Nntp.SetArticleStream(System.IO.Stream)">
            <summary>Sets the stream to which the article downloaded from the server will be written.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnEndTransfer">
            <summary>Fired when the article text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnGroupList">
            <summary>Fired while group data transfers (during group listings).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnGroupOverview">
            <summary>Fired for each line of article overview data (during group overviews).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnGroupSearch">
            <summary>Fired for each line of group search data (during group searches).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnHeader">
            <summary>Fired for every article header being retrieved during article retrieval.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnPITrail">
            <summary>Traces the commands sent to the news server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnStartTransfer">
            <summary>Fired when the article text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Nntp.OnTransfer">
            <summary>Fired while the article text gets transferred (to or from the NewsServer ).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleList">
            <summary>Collection of articles collected through GroupOverview or GroupSearch .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.GroupList">
            <summary>Collection of newsgroups listed by ListGroups or ListNewGroups .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ParsedHeaders">
            <summary>A collection of headers returned from the last article retrieval.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleCount">
            <summary>The estimated number of articles in CurrentGroup .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleDate">
            <summary>The date of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleFrom">
            <summary>The email address of the author (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleHeaders">
            <summary>The full headers of the article as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleId">
            <summary>The message identifier of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleReferences">
            <summary>Articles to which the posted article follows up.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleReplyTo">
            <summary>The address to reply to (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleSubject">
            <summary>The article subject (for posted articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.ArticleText">
            <summary>The full text of the article (without the headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.AttachedFile">
            <summary>A file name which the contents of will be appended to the ArticleText when posting articles.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.CheckDate">
            <summary>The date (format YYMMDD HHMMSS) to check for creation of new groups. If the group was created after the date specified, it is considered new.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.CurrentArticle">
            <summary>The number or message identifier of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.CurrentGroup">
            <summary>The name of the current group.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.FirstArticle">
            <summary>The number of the first article in CurrentGroup .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.LastArticle">
            <summary>The number of the last article in CurrentGroup .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.LocalFile">
            <summary>The path to a local file for downloading the article body.  If the file exists, it is overwritten (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.MaxLines">
            <summary>The maximum number of message lines aside from headers to retrieve.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Newsgroups">
            <summary>A comma separated list of newsgroups in which to post the article.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.NewsPort">
            <summary>The server port for secure NNTP (default 119).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.NewsServer">
            <summary>The name or address of a news server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Organization">
            <summary>The organization of the author (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.OtherHeaders">
            <summary>An RFC850 compliant string consisting of extra headers (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.OverviewRange">
            <summary>A range for the GroupOverview method (first-last).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Password">
            <summary>A logon password for the NewsServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SearchHeader">
            <summary>A header for the GroupSearch method.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SearchPattern">
            <summary>A search pattern for the GroupSearch method.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SearchRange">
            <summary>A range for the GroupSearch method (first-last).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Nntp.User">
            <summary>A user identifier to login as in the NewsServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthLaunchBrowserEventArgs">
            <summary>Event arguments for the LaunchBrowser event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthReturnURLEventArgs">
            <summary>Event arguments for the ReturnURL event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OauthTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.AddParam(System.String,System.String)">
            <summary>Adds a name-value pair to the query string parameters of outgoing request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.GetAuthorization">
            <summary>Gets the authorization string required to access the protected resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.GetAuthorizationURL">
            <summary>Builds and returns the URL to which the user should be re-directed for authorization.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.StartWebServer">
            <summary>Starts the embedded web server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Oauth.StopWebServer">
            <summary>Stops the embedded web server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnLaunchBrowser">
            <summary>Fires before launching a browser with the authorization URL.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnReturnURL">
            <summary>Fires when the user is redirected to the embedded web server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Oauth.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.Params">
            <summary>The parameters to be included in the request to the authorization server, or received in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.AccessToken">
            <summary>The access token returned by the authorization server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.AuthorizationCode">
            <summary>The authorization code that is exchanged for an access token.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.AuthorizationScope">
            <summary>The scope request or response parameter used during authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.ClientId">
            <summary>The id of the client assigned when registering the application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.ClientProfile">
            <summary>The type of client that is requesting authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.ClientSecret">
            <summary>The secret value for the client assigned when registering the application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.RefreshToken">
            <summary>Specifies the refresh token received from or sent to the authorization server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.ReturnURL">
            <summary>The URL where the user (browser) returns after authenticating.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.ServerAuthURL">
            <summary>The URL of the authorization server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.ServerTokenURL">
            <summary>The URL used to obtain the access token.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Oauth.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataEntityEventArgs">
            <summary>Event arguments for the Entity event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataEntryEventArgs">
            <summary>Event arguments for the Entry event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataPropertyEventArgs">
            <summary>Event arguments for the Property event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.OdataTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.CreateEntry">
            <summary>Creates a new entry within the specified OData service resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.CustomRequest(System.String,System.String,System.String)">
            <summary>Sends a request to the specified URL using the HTTP Method and Post Data provided.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.DeleteEntry">
            <summary>Deletes an entry within an OData service resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.GetEntryProperty(System.String)">
            <summary>Get an OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.GetSchema">
            <summary>Retrieves the schema for a service.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.QueryService">
            <summary>Queries an OData service using the specified parameters.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.Reset">
            <summary>Reset all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.SetEntryProperty(System.String,System.String)">
            <summary>Set an OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.SetSchemaEntity(System.String)">
            <summary>Sets the schema entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.SetSchemaProperty(System.String)">
            <summary>Sets the schema property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.SetSchemaType(System.String)">
            <summary>Sets the schema type.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.UpdateEntry">
            <summary>Update an OData entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Odata.UpdateProperty(System.String,System.String)">
            <summary>Update an OData entry property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnEntity">
            <summary>Fired once for each entity retrieved.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnEntry">
            <summary>Fired once for each entry retrieved.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnProperty">
            <summary>Fired once for each property found within an entity.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Odata.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Channel">
            <summary>The feed elements of a feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryLinks">
            <summary>A collection of links in the current OData entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryProperties">
            <summary>A collection of elements in the current OData entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaAssociation">
            <summary>The navigation properties and their corresponding associations contained within an entity of a service schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaEntity">
            <summary>The entities contained within a service schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaProperty">
            <summary>The properties contained within an entity of a service schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaTypeField">
            <summary>The fields (properties) contained within a complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryAuthor">
            <summary>The Author of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryCount">
            <summary>The number of entries contained within an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryETag">
            <summary>The ETag of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryId">
            <summary>The ID of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryIndex">
            <summary>The index of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntrySummary">
            <summary>The Summary of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryTitle">
            <summary>The Title of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryType">
            <summary>The entry category or type.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryUpdated">
            <summary>The Date-Time when current entry in an OData feed was updated.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.EntryXML">
            <summary>The raw XML of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.ODataVersion">
            <summary>The OData Version.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.OtherQueryOptions">
            <summary>Additional Query Options to be used when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.QueryFilter">
            <summary>Selects only the entries that satisfy the specified filter (expression).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.QueryOrderBy">
            <summary>The value used to order entries when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.QuerySelect">
            <summary>Selects only the specified properties to be returned in an entry when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.QuerySkip">
            <summary>The number of entries to skip when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.QuerySkipToken">
            <summary>Token given by an OData server when the last query result collection is too large.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.QueryTop">
            <summary>Selects the first N entries when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.ResourcePath">
            <summary>The Resource Path of an OData service.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaAssociationCount">
            <summary>The number of navigation properties contained within an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaAssociationIndex">
            <summary>The index of the current navigation property in an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaEntityCount">
            <summary>The number of entities contained within an OData schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaEntityIndex">
            <summary>The index of the current entity in an OData schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaKeys">
            <summary>The keys of a schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaPropertyCount">
            <summary>The number of properties contained within an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaPropertyIndex">
            <summary>The index of the current property in an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaTypeFieldCount">
            <summary>The number of properties contained within an OData schema complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.SchemaTypeFieldIndex">
            <summary>The index of the current field (property) in an OData schema complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.ServiceRootURI">
            <summary>The root URI of an OData service.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Odata.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PingErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PingResponseEventArgs">
            <summary>Event arguments for the Response event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.PingHost(System.String)">
            <summary>Pings a host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Ping.WakeOnLAN(System.String,System.String)">
            <summary>Sends a Wake-On-LAN packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ping.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Ping.OnResponse">
            <summary>Fired when a response packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.Active">
            <summary>Enables or disables receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.PacketSize">
            <summary>The size of the packet to send as the ping request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.RemoteHost">
            <summary>The address of the RemoteHost.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.RequestId">
            <summary>A unique identifier for outgoing packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.ResponseSource">
            <summary>The source of the last PING response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.ResponseTime">
            <summary>Time elapsed between sending the original packet and the remote host reply.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.TimeToLive">
            <summary>The time to live (TTL) value for the ICMP packets sent by the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Ping.TypeOfService">
            <summary>The type of the ICMP message sent as a ping request.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopMessageListEventArgs">
            <summary>Event arguments for the MessageList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.PopTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Connect">
            <summary>Connects to the mail server and attempts to login.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Delete">
            <summary>Deletes a message specified by MessageNumber on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Disconnect">
            <summary>Disconnects from the mail server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.ListMessageSizes">
            <summary>Retrieves a list of all message sizes from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.ListMessageUIDs">
            <summary>Retrieves a list of all message UIDs from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Reset">
            <summary>Resets all changes and revert back to the state when the user first connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.Retrieve">
            <summary>Retrieves a message specified by MessageNumber from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.RetrieveHeaders">
            <summary>Retrieves headers for a message specified by MessageNumber .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Pop.SetMessageStream(System.IO.Stream)">
            <summary>Sets the stream to which the message downloaded from the server will be written.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnEndTransfer">
            <summary>Fired when the message completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnHeader">
            <summary>Fired for every message header being retrieved.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnMessageList">
            <summary>Fired for every message listed by ListMessageSizes and/or ListMessageUIDs .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnStartTransfer">
            <summary>Fired when the message starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Pop.OnTransfer">
            <summary>Fired while the message gets transferred from MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageHeaders">
            <summary>Collection of the message headers as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageRecipients">
            <summary>A collection of recipients for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.IncludeHeaders">
            <summary>Instructs the component to include the headers in the MessageText and LocalFile.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.LocalFile">
            <summary>The path to a local file for downloading the message body.  If the file exists, it is overwritten (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MailPort">
            <summary>The server port for POP (default 110).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MailServer">
            <summary>The name or address of a mail server (internet post office server).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MaxLines">
            <summary>The maximum number of message lines besides headers to retrieve.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageB">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Message">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageCc">
            <summary>The value of the CC header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageCount">
            <summary>The number of messages in the mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageDate">
            <summary>The value of the date header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageFrom">
            <summary>The value of the from header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageHeadersString">
            <summary>A string representation of the full headers of the message as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageNumber">
            <summary>Current (selected) message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageReplyTo">
            <summary>The value of the Reply-To header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageSize">
            <summary>The size in bytes of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageSubject">
            <summary>The value of the Subject header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageText">
            <summary>The full text of the message as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageTo">
            <summary>The value of the To header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.MessageUID">
            <summary>The unique identifier of the message as specified by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Password">
            <summary>The password for the mailbox user.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.TotalSize">
            <summary>Cumulative size in bytes of messages in the mailbox (including headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Pop.User">
            <summary>The user identifier for the mailbox.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RcpProgressEventArgs">
            <summary>Event arguments for the Progress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.GetFile">
            <summary>Gets the specified file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.PutFile">
            <summary>Puts a file to a specified location.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rcp.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rcp.OnProgress">
            <summary>Fired whenever data is being transferred between the localhost and RemoteHost .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.FileMode">
            <summary>The file mode for the RemoteFile .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.LocalFile">
            <summary>The file on the local host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.LocalPort">
            <summary>The TCP port in the local host where the component binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Password">
            <summary>The password associated with User .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Protocol">
            <summary>Sets the protocol to use for the transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.RemoteFile">
            <summary>The file on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.RemoteHost">
            <summary>The remote host to which to connect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.RemotePort">
            <summary>The port for the service (REXEC or RSHELL).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rcp.User">
            <summary>The identification of the remote user for a transfer.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestCharactersEventArgs">
            <summary>Event arguments for the Characters event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestCommentEventArgs">
            <summary>Event arguments for the Comment event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestEndElementEventArgs">
            <summary>Event arguments for the EndElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestEndPrefixMappingEventArgs">
            <summary>Event arguments for the EndPrefixMapping event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestEvalEntityEventArgs">
            <summary>Event arguments for the EvalEntity event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestIgnorableWhitespaceEventArgs">
            <summary>Event arguments for the IgnorableWhitespace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestMetaEventArgs">
            <summary>Event arguments for the Meta event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestPIEventArgs">
            <summary>Event arguments for the PI event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestSpecialSectionEventArgs">
            <summary>Event arguments for the SpecialSection event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestStartElementEventArgs">
            <summary>Event arguments for the StartElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestStartPrefixMappingEventArgs">
            <summary>Event arguments for the StartPrefixMapping event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RestTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.SetPostData(System.Byte[],System.Int32,System.Int32)">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Attr(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Delete(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Get(System.String)">
            <summary>Fetches the document using the HTTP GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Post(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rest.Reset">
            <summary>Resets the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnCharacters">
            <summary>Fired for plain text segments of the input stream.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnComment">
            <summary>Fired when a comment section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnEndElement">
            <summary>Fired when an end-element tag is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnEndPrefixMapping">
            <summary>Fired when leaving the scope of a namespace declaration.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnEvalEntity">
            <summary>Fired every time an entity needs to be evaluated.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnIgnorableWhitespace">
            <summary>Fired when a section of ignorable whitespace is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnMeta">
            <summary>Fired when a meta section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnPI">
            <summary>Fired when a processing instruction section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnSpecialSection">
            <summary>Fired when a special section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnStartElement">
            <summary>Fired when a begin-element tag is encountered in the document.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnStartPrefixMapping">
            <summary>Fired when entering the scope of a namespace declaration.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rest.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Namespaces">
            <summary>A collection of namespaces in the current stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XAttributes">
            <summary>A collection of attributes of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XChildren">
            <summary>Collection of child elements of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.BuildDOM">
            <summary>When True, an internal object model of the XML document is created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.HTTPMethod">
            <summary>The HTTP method used for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.PostDataB">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.PostData">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.TransferredDataLimit">
            <summary>The maximum of bytes of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.URL">
            <summary>The URL to which information is posted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.Validate">
            <summary>When True, the parser checks that the document consists of well-formed XML.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XElement">
            <summary>The name of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XErrorPath">
            <summary>An XPath to check the server response for errors.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XNamespace">
            <summary>The namespace of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XParent">
            <summary>The parent of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XPath">
            <summary>Provides a way to point to a specific element in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XPrefix">
            <summary>The prefix of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XSubTree">
            <summary>A snapshot of the current element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rest.XText">
            <summary>The text of the current element.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecStderrEventArgs">
            <summary>Event arguments for the Stderr event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RexecStdoutEventArgs">
            <summary>Event arguments for the Stdout event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.SetEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.SetErrEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.SetStdin(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Disconnect">
            <summary>Disconnect from the RemoteHost .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Execute(System.String)">
            <summary>Execute a Command on the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rexec.Send(System.Byte[])">
            <summary>Send standard input to the program executing on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnStderr">
            <summary>Fired when data (complete lines) come in through stderr.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rexec.OnStdout">
            <summary>Fired when data (complete lines) come in through stdout.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.BytesSent">
            <summary>The number of bytes actually sent after an assignment to Stdin.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Command">
            <summary>The command to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.EOF">
            <summary>If True, the connection has closed, and there is no buffered data available.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.EOLB">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.EOL">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.ErrEOLB">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.ErrEOL">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.ErrorMessage">
            <summary>The error message returned when any of the steps prior to command execution fail.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.LocalPort">
            <summary>The TCP port in the local host where the component binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemotePassword">
            <summary>The password of the user on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemotePort">
            <summary>The remote exec service port (default is 512).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.RemoteUser">
            <summary>The id of the user on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.StderrB">
            <summary>Returns the standard error output (stderr) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Stderr">
            <summary>Returns the standard error output (stderr) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.StdinB">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Stdin">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.StdoutB">
            <summary>Provides the standard output (stdout) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Stdout">
            <summary>Provides the standard output (stdout) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rexec.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellStderrEventArgs">
            <summary>Event arguments for the Stderr event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RshellStdoutEventArgs">
            <summary>Event arguments for the Stdout event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.SetEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.SetErrEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.SetStdin(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Disconnect">
            <summary>Disconnects from the RemoteHost .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Execute(System.String)">
            <summary>Executes a Command on the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rshell.Send(System.Byte[])">
            <summary>Sends standard input to the program executing on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnStderr">
            <summary>Fired when data (complete lines) come in through stderr.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rshell.OnStdout">
            <summary>Fired when data (complete lines) come in through stdout.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.BytesSent">
            <summary>The number of bytes actually sent after an assignment to Stdin.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Command">
            <summary>The command to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.EOF">
            <summary>If True, the connection has closed, and there is no buffered data available.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.EOLB">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.EOL">
            <summary>Used to break the stdout data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.ErrEOLB">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.ErrEOL">
            <summary>Used to break the stderr data stream into chunks separated by its value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.ErrorMessage">
            <summary>The error message returned when any of the steps prior to command execution fail.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.LocalPort">
            <summary>The TCP port in the local host where the component binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.LocalUser">
            <summary>The identifier of the user on the local machine.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.RemotePort">
            <summary>The remote shell service port (default is 514).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.RemoteUser">
            <summary>The id of the user on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.StderrB">
            <summary>Returns the standard error output (stderr) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Stderr">
            <summary>Returns the standard error output (stderr) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.StdinB">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Stdin">
            <summary>A string of data to be sent to the remote host while connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.StdoutB">
            <summary>Provides the standard output (stdout) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Stdout">
            <summary>Provides the standard output (stdout) from the remote application.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rshell.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssOPMLHeaderEventArgs">
            <summary>Event arguments for the OPMLHeader event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssOPMLOutlineEventArgs">
            <summary>Event arguments for the OPMLOutline event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.RssTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.AddItem(System.String,System.String,System.String)">
            <summary>Inserts a new item into the beginning of an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.GetFeed(System.String)">
            <summary>Fetches an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.GetProperty(System.String)">
            <summary>Gets the value of a specific RSS feed item element or attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.GetURL(System.String)">
            <summary>Fetches an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.OPMLAttr(System.String)">
            <summary>Returns the value of the attribute specified in the parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.ReadFile(System.String)">
            <summary>Loads an RSS file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.ReadOPML(System.String)">
            <summary>Reads and parses an OPML file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.Reset">
            <summary>Resets all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.SetProperty(System.String,System.String)">
            <summary>Sets the value of a specific RSS feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Rss.WriteFile(System.String)">
            <summary>Writes an RSS feed from the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnOPMLHeader">
            <summary>Fired for each value in the Header section of the current OPML document.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnOPMLOutline">
            <summary>Fired for each outline in the current OPML document.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Rss.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Channel">
            <summary>The channel data for the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Items">
            <summary>A collection of items in the current RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Namespaces">
            <summary>A collection of namespaces in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.RSSData">
            <summary>The complete text of the RSS XML file.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.RSSVersion">
            <summary>The RSS protocol version of the current RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TransferredDataLimit">
            <summary>The maximum of bytes of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Rss.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppMessageInEventArgs">
            <summary>Event arguments for the MessageIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppMessageStatusEventArgs">
            <summary>Event arguments for the MessageStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmppSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.AddRecipient(System.Int32,System.String)">
            <summary>Will add a recipient of the specified type to the recipient list.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.CancelMessage(System.String)">
            <summary>Will cancel the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.CheckLink">
            <summary>Will check the connection to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.CheckMessageStatus(System.String)">
            <summary>Will retrieve the status of the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Connect(System.String,System.String)">
            <summary>Will bind as a transceiver to the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Disconnect">
            <summary>Will disconnect from the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.ReplaceMessage(System.String,System.String)">
            <summary>Replaces a previously sent message with a new one.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.SendCommand(System.Int32,System.Byte[])">
            <summary>Will format and send a PDU using the specified command identifier and payload.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.SendData(System.Byte[])">
            <summary>Sends raw data to Recipients .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smpp.SendMessage(System.String)">
            <summary>Sends a message to all recipients in the recipient list.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnConnected">
            <summary>This event is fired after a successful bind operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnDisconnected">
            <summary>This event is fired when connection to the SMS service is lost.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnError">
            <summary>This event is fired when the server detects an error.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnMessageIn">
            <summary>This event is fired upon receipt of a message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnMessageStatus">
            <summary>This event is fired upon receipt of a message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnPITrail">
            <summary>This event is fired once for each PDU sent between the client and server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smpp.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Recipients">
            <summary>A list of message recipients.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Connected">
            <summary>Indicates whether or not the component is bound.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.MessageExpiration">
            <summary>Denotes the validity period of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.MessageId">
            <summary>The identifier of the most recently sent message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.MessagePriority">
            <summary>The priority level of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Password">
            <summary>Contains the user's password.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Protocol">
            <summary>The SMPP protocol to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.ScheduledDelivery">
            <summary>Tells the server when to deliver the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SenderAddress">
            <summary>The address of the ESME.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.ServiceType">
            <summary>Indicates the type of service for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SMPPPort">
            <summary>This property contains the server port for secure SMPP (default 2775).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SMPPServer">
            <summary>The SMPP entity to which the component will connect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SMPPVersion">
            <summary>The SMPP version to be used throughout the connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.SystemType">
            <summary>A string representing the type of system during a connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smpp.UserId">
            <summary>Used for identification with the SMPP service.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpExpandEventArgs">
            <summary>Event arguments for the Expand event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SmtpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SetMessage(System.Byte[],System.Int32,System.Int32)">
            <summary>Provides a way to set the raw message content.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Disconnect">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Expand(System.String)">
            <summary>Asks the MailServer to expand a name or mailing list.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Queue(System.String)">
            <summary>Queues the message into QueueDir .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Send">
            <summary>Sends the current message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SendToTerminalAndEmail">
            <summary>Sends to terminal and email.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SendToTerminalOnly">
            <summary>Sends to terminal only.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SendToTerminalOrEmail">
            <summary>Sends to terminal or email.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.SetMessageStream(System.IO.Stream)">
            <summary>Sets the stream to be uploaded to the server as part of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Smtp.Verify(System.String)">
            <summary>Sends a Verification request to the SMTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnExpand">
            <summary>Fired for every email address returned by the server when the Expand method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Smtp.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageHeaders">
            <summary>Collection of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageRecipients">
            <summary>The collection of recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.AllowExtensions">
            <summary>A switch allowing the component to use ESMTP features (SMTP extensions).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.AuthMechanism">
            <summary>Used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.DeliveryNotificationTo">
            <summary>Email address to send to which to send a delivery notification.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageB">
            <summary>Provides a way to set the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Message">
            <summary>Provides a way to set the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageDate">
            <summary>Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageHeadersString">
            <summary>String representation of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageId">
            <summary>The Message Identifier for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.MessageText">
            <summary>The full text of the message to send (without headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Password">
            <summary>A password for logon to the MailServer .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.ReplyTo">
            <summary>A mail address to which to reply (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.ReturnPath">
            <summary>Sets the Return-Path to be used for sending email.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Smtp.User">
            <summary>A user identifier to login as in the MailServer .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SnppSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Connect">
            <summary>Connects to an SNPP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Disconnect">
            <summary>Disconnects from an SNPP gateway.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Reset">
            <summary>Resets the server state created during the connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Snpp.Send">
            <summary>Sends the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnPITrail">
            <summary>Traces the commands sent to the server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Snpp.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.CallerId">
            <summary>The identifier of the caller.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Message">
            <summary>The message being sent (alphanumeric).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.PagerId">
            <summary>The identifying number of the pager to send a Message to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.ServerName">
            <summary>The name or address of the SNPP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.ServerPort">
            <summary>The server port for SNPP (default 444).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Snpp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SoapTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.AddParam(System.String,System.String)">
            <summary>Adds a parameter-value pair.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Attr(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.BuildPacket">
            <summary>Build the request packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.EvalPacket">
            <summary>Evaluate the packet in SOAPPacket .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.SendPacket">
            <summary>Send the packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.SendRequest">
            <summary>Send the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.TryXPath(System.String)">
            <summary>Navigates to the specified XPath if it exists.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Soap.Value(System.String)">
            <summary>Returns the value of a parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Soap.OnTransfer">
            <summary>Fired while the response transfers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Namespaces">
            <summary>A collection of namespaces in the current stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Params">
            <summary>A collection of parameters for the SOAP Method .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XAttributes">
            <summary>A collection of attributes of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XChildren">
            <summary>Collection of child elements of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ActionURI">
            <summary>The value of the SOAP-Action header.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ContentType">
            <summary>Content type for SOAP request data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FaultActor">
            <summary>Actor of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FaultCode">
            <summary>Code of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FaultString">
            <summary>Textual description of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Method">
            <summary>The remote Method .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.MethodURI">
            <summary>The URI corresponding to the SOAP Method .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Pragma">
            <summary>A browser/server specific header line (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ReturnValue">
            <summary>Value returned by the SOAP Method .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SOAPEncoding">
            <summary>The type of SOAP Encoding used for SOAP requests.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SOAPHeader">
            <summary>Contents of the optional SOAP header sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.SOAPPacket">
            <summary>Full contents of the SOAP packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.URL">
            <summary>The URL to fetch.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.ValueFormat">
            <summary>Format of data returned or set.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XElement">
            <summary>The name of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XNamespace">
            <summary>The namespace of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XParent">
            <summary>The parent of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XPath">
            <summary>A path into the SOAPPacket received by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XPrefix">
            <summary>The prefix of the element pointed to by XPath .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Soap.XText">
            <summary>The text of the element pointed to by XPath .</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SyslogErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.SyslogPacketInEventArgs">
            <summary>Event arguments for the PacketIn event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Syslog.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Syslog.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Syslog.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Syslog.SendPacket(System.Int32,System.Int32,System.String)">
            <summary>Send a log packet to RemoteHost .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Syslog.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Syslog.OnPacketIn">
            <summary>Fires whenever a system log packet is received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.Active">
            <summary>Enables or disables sending and receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.LocalPort">
            <summary>The port in the local host where Syslog binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.RemoteHost">
            <summary>Sets a specific host for outgoing log packets.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Syslog.RemotePort">
            <summary>Sets a specific port for outgoing log packets.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetCommandEventArgs">
            <summary>Event arguments for the Command event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDoEventArgs">
            <summary>Event arguments for the Do event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetDontEventArgs">
            <summary>Event arguments for the Dont event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetSubOptionEventArgs">
            <summary>Event arguments for the SubOption event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetWillEventArgs">
            <summary>Event arguments for the Will event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TelnetWontEventArgs">
            <summary>Event arguments for the Wont event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.SetDoSubOption(System.Byte[],System.Int32,System.Int32)">
            <summary>A Telnet SubOption to send to the server with the SubOption command.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.SetUrgentData(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Connect(System.String)">
            <summary>Connect to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Disconnect">
            <summary>Disconnect from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Telnet.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnCommand">
            <summary>Fired when a Telnet command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDataIn">
            <summary>Fired when data is received from the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDo">
            <summary>Fired when a Telnet DO OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnDont">
            <summary>Fired when a Telnet DONT OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnSubOption">
            <summary>Fired when a Telnet SubOption command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnWill">
            <summary>Fired when a Telnet WILL OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Telnet.OnWont">
            <summary>Fired when a Telnet WONT OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Command">
            <summary>A single character Telnet command code to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Connected">
            <summary>Triggers a connection or disconnection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DataToSendB">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DataToSend">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DontOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet DONT command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DoOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet DO command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DoSubOptionB">
            <summary>A Telnet SubOption to send to the server with the SubOption command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.DoSubOption">
            <summary>A Telnet SubOption to send to the server with the SubOption command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.LocalPort">
            <summary>The TCP port in the local host where IPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.RemotePort">
            <summary>The secure Telnet port in the remote host (default is 23).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.Transparent">
            <summary>When True, Telnet command processing is disabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.UrgentDataB">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.UrgentData">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.WillOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet WILL command.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Telnet.WontOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet WONT command.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TftpTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.GetFile">
            <summary>Download a RemoteFile from the TFTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.PutFile">
            <summary>Upload a file specified by LocalFile to the TFTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.SetDownloadStream(System.IO.Stream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Tftp.SetUploadStream(System.IO.Stream)">
            <summary>Sets the stream to be uploaded to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnEndTransfer">
            <summary>Fired when a file completes downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnStartTransfer">
            <summary>Fired when a file starts downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Tftp.OnTransfer">
            <summary>Fired during file download/upload.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.LocalFile">
            <summary>The file on the local host to transfer the data to/from.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.MaxRetransmits">
            <summary>The number of times to retry sending a failed packet before disconnecting.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.RemoteFile">
            <summary>The file on the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.RetransmitTimeout">
            <summary>Maximum time in seconds to wait for a reply packet from the server before retransmitting the last packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.TFTPPort">
            <summary>The UDP port where the remote TFTP server is listening.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.TFTPServer">
            <summary>The address of the TFTP server to exchange files with.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Tftp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TracerouteErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TracerouteHopEventArgs">
            <summary>Event arguments for the Hop event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.TracerouteHopResolvedEventArgs">
            <summary>Event arguments for the HopResolved event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Traceroute.TraceTo(System.String)">
            <summary>Trace the route to a host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Traceroute.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Traceroute.OnHop">
            <summary>Fired for each hop in the trace to the RemoteHost .</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Traceroute.OnHopResolved">
            <summary>Fired when the name of a hop address is found.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.Hops">
            <summary>A collection of hops to the RemoteHost .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopLimit">
            <summary>The maximum number of hops to allow for a trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.HopTimeout">
            <summary>Maximum amount of time to wait for an individual hop to complete.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.RemoteHost">
            <summary>The address of a host to trace to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.ResolveNames">
            <summary>Determines whether the component resolves the host name for each host during the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Traceroute.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.UdpportDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.UdpportErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.UdpportReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Udpport.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Udpport.OnDataIn">
            <summary>Fired when data is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Udpport.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Udpport.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.Active">
            <summary>Enables or disables sending and receiving of data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.DataToSendB">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.DataToSend">
            <summary>A string of data to be sent to the remote host.  Write-only property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.DontRoute">
            <summary>If set to True, it forces the socket to send data directly to interface (no routing).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.LocalPort">
            <summary>The UDP port in the local host where UDPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.RemotePort">
            <summary>The UDP port in the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Udpport.TimeToLive">
            <summary>The maximum number of subnets that a datagram can traverse.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavDirListEventArgs">
            <summary>Event arguments for the DirList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavResourcePropertiesEventArgs">
            <summary>Event arguments for the ResourceProperties event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebdavTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.CopyResource(System.String,System.String)">
            <summary>Copy a resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.DeleteResource(System.String)">
            <summary>Delete a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.FindProperties(System.String)">
            <summary>Get resource property values from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.FindPropertyNames(System.String)">
            <summary>Get resource property names from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.GetProperty(System.String)">
            <summary>Get the value for a particular property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.GetResource(System.String)">
            <summary>Get a resource using the WebDAV GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.ListDirectory(System.String)">
            <summary>List the files and subdirectories of the ResourceURI .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.LockResource(System.String)">
            <summary>Obtain a lock for a specified resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.MakeDirectory(System.String)">
            <summary>Make a new directory.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.MoveResource(System.String,System.String)">
            <summary>Moves one resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.PatchProperties(System.String)">
            <summary>Update the current set of properties on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.PostToResource(System.String,System.Byte[])">
            <summary>Posts data to a resource using the WebDAV POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.PutResource(System.String)">
            <summary>Send data to the server using the PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.SetDownloadStream(System.IO.Stream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.SetProperty(System.String,System.String)">
            <summary>Set the value of a property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.SetUploadStream(System.IO.Stream)">
            <summary>Sets the stream to be uploaded to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webdav.UnLockResource(System.String)">
            <summary>Unlocks a resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnDirList">
            <summary>Fires for each entry returned in a directory listing.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnResourceProperties">
            <summary>Fires for each entry returned through a property search.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webdav.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Namespaces">
            <summary>Collection of namespaces in the current stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Properties">
            <summary>A collection of WebDAV properties.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Resources">
            <summary>Collection of resources resulting from the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Depth">
            <summary>The depth associated with the current operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LocalFile">
            <summary>The path to a local file used for DAV operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockOwner">
            <summary>The principle that owns the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockScope">
            <summary>The scope of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockTimeout">
            <summary>The time to live for the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockTokens">
            <summary>The lock string to be used when submitting operations on a locked resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.LockType">
            <summary>The type of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webdav.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebformTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.AddFormVar(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.Submit">
            <summary>Post current data to the URL specified by the URL property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webform.SubmitTo(System.String)">
            <summary>Post current data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webform.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FormVars">
            <summary>Form variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Encoding">
            <summary>The encoding type for the form data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.URL">
            <summary>The URL to post information to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webform.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebsocketSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.Connect(System.String)">
            <summary>Connects to the specified host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.Disconnect">
            <summary>Disconnects from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.ResetHeaders">
            <summary>Resets all HTTP Headers, Cookies, LocalFile , and AttachedFile .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.Send(System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.SendFile(System.String)">
            <summary>Sends file to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.SendText(System.String)">
            <summary>Sends text data to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.SetReceiveStream(System.IO.Stream)">
            <summary>Sets the stream to which received data will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Websocket.SetSendStream(System.IO.Stream)">
            <summary>Reads content from the stream and sends it to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnDataIn">
            <summary>Fired when data is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Websocket.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.DataFormat">
            <summary>The format of the data being sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.DataToSendB">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.DataToSend">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Origin">
            <summary>The Origin header field value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.SubProtocols">
            <summary>Optional subprotocols supported by the client.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Websocket.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadLogEventArgs">
            <summary>Event arguments for the Log event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WebuploadUploadProgressEventArgs">
            <summary>Event arguments for the UploadProgress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.AddFileVar(System.String,System.String)">
            <summary>Adds a file variable and the corresponding file name.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.AddFormVar(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.Upload">
            <summary>Posts data to the URL specified by URL .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Webupload.UploadTo(System.String)">
            <summary>Posts data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnLog">
            <summary>Fires once for each log message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Webupload.OnUploadProgress">
            <summary>Fired while the component is uploading files to the URL .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FileVars">
            <summary>File variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FormVars">
            <summary>Form variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.URL">
            <summary>The URL to post information to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Webupload.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.WhoisErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.Query(System.String)">
            <summary>Get information about a domain.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Whois.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Whois.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.DefaultServer">
            <summary>The default server from which to retrieve registrar information.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.DomainInfo">
            <summary>The information that is returned by the Server .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.Server">
            <summary>The server to request domain information from.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.ServerPort">
            <summary>The server port for Whois (default 43).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Whois.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlCharactersEventArgs">
            <summary>Event arguments for the Characters event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlCommentEventArgs">
            <summary>Event arguments for the Comment event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlEndElementEventArgs">
            <summary>Event arguments for the EndElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlEndPrefixMappingEventArgs">
            <summary>Event arguments for the EndPrefixMapping event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlEvalEntityEventArgs">
            <summary>Event arguments for the EvalEntity event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlIgnorableWhitespaceEventArgs">
            <summary>Event arguments for the IgnorableWhitespace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlMetaEventArgs">
            <summary>Event arguments for the Meta event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlPIEventArgs">
            <summary>Event arguments for the PI event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlSpecialSectionEventArgs">
            <summary>Event arguments for the SpecialSection event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlStartElementEventArgs">
            <summary>Event arguments for the StartElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlStartPrefixMappingEventArgs">
            <summary>Event arguments for the StartPrefixMapping event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmlXMLEventArgs">
            <summary>Event arguments for the XML event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.EndElement">
            <summary>Writes the closing tag of an open XML element.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.Flush">
            <summary>Flushes the parser and checks its end state.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.GetAttr(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.LoadDOM(System.String)">
            <summary>Loads the DOM from a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.LoadSchema(System.String)">
            <summary>Load the XML schema.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.Parse">
            <summary>This method parses the specified XML data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.PutAttr(System.String,System.String,System.String)">
            <summary>Writes an XML attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.PutCData(System.String)">
            <summary>Writes an XML CDATA block.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.PutComment(System.String)">
            <summary>Writes an XML comment block.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.PutElement(System.String,System.String,System.String)">
            <summary>Writes a simple XML element with a value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.PutRaw(System.String)">
            <summary>Writes a raw XML fragment.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.PutString(System.String)">
            <summary>Writes text inside an XML element.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.RemoveAttr(System.String)">
            <summary>Remove a attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.RemoveElement">
            <summary>Remove current element.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.Reset">
            <summary>Resets the parser.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.Save">
            <summary>Closes the component writing stream.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.SaveDOM(System.String)">
            <summary>Saves the DOM to a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.SetInputStream(System.IO.Stream)">
            <summary>Sets the stream from which the component will read data to parse.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.SetOutputStream(System.IO.Stream)">
            <summary>The stream to which the component will write the XML.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.StartElement(System.String,System.String)">
            <summary>Writes the opening tag of an XML element.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xml.TryXPath(System.String)">
            <summary>Navigates to the specified XPath if it exists.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnCharacters">
            <summary>Fired for plain text segments of the input stream.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnComment">
            <summary>Fired when a comment section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnEndElement">
            <summary>Fired when an end-element tag is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnEndPrefixMapping">
            <summary>Fired when leaving the scope of a namespace declaration.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnEvalEntity">
            <summary>Fired every time an entity needs to be evaluated.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnIgnorableWhitespace">
            <summary>Fired when a section of ignorable whitespace is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnMeta">
            <summary>Fired when a meta section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnPI">
            <summary>Fired when a processing instruction section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnSpecialSection">
            <summary>Fired when a special section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnStartElement">
            <summary>Fired when a begin-element tag is encountered in the document.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnStartPrefixMapping">
            <summary>Fired when entering the scope of a namespace declaration.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xml.OnXML">
            <summary>Fires as XML is written.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.Namespaces">
            <summary>Collection of namespaces in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XAttributes">
            <summary>A collection of attributes of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XChildren">
            <summary>Collection of child elements of the currently selected XML element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XComments">
            <summary>A collection of comments of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XMLDeclaration">
            <summary>Specifies details of the XML declaration.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.BuildDOM">
            <summary>When True, an internal object model of the XML document is created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.InputData">
            <summary>The XML data to parse.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.InputFile">
            <summary>The file to process.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.OutputData">
            <summary>The output XML after processing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.OutputFile">
            <summary>The path to a local file where the output will be written.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.Overwrite">
            <summary>Indicates whether or not the component should overwrite files.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.Validate">
            <summary>When True, the parser checks that the document consists of well-formed XML.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XElement">
            <summary>The name of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XNamespace">
            <summary>The namespace of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XParent">
            <summary>The parent of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XPath">
            <summary>Provides a way to point to a specific element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XPrefix">
            <summary>The prefix of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XSubTree">
            <summary>A snapshot of the current element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xml.XText">
            <summary>The text of the current element.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppBuddyUpdateEventArgs">
            <summary>Event arguments for the BuddyUpdate event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppIQEventArgs">
            <summary>Event arguments for the IQ event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppMessageInEventArgs">
            <summary>Event arguments for the MessageIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppPresenceEventArgs">
            <summary>Event arguments for the Presence event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppSubscriptionRequestEventArgs">
            <summary>Event arguments for the SubscriptionRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppSyncEventArgs">
            <summary>Event arguments for the Sync event.</summary>
        </member>
        <member name="T:nsoftware.IPWorks.XmppTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Add(System.String,System.String,System.String)">
            <summary>This method will add an entity to this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Cancel(System.String)">
            <summary>This will cancel another entity's subscription to this entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.ChangePassword(System.String)">
            <summary>This method will change the current user's password.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.ChangePresence(System.Int32,System.String)">
            <summary>This method will set the availability and status of this entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Config(System.String)">
            <summary>Sets or retrieves a configuration setting .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Connect(System.String,System.String)">
            <summary>This method will connect the component to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Disconnect">
            <summary>This method disconnects the component from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.DoEvents">
            <summary>This method processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.ProbePresence(System.String)">
            <summary>Use this method to probe for another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.QueryRegister(System.String)">
            <summary>This method queries a server for the necessary registration fields.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Register(System.String)">
            <summary>This method registers an account with a server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Remove(System.String,System.String,System.String)">
            <summary>This method will remove an entity from this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.RetrieveRoster">
            <summary>This method will retrieve this entity's roster from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SendCommand(System.String)">
            <summary>This method sends a command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SendFile(System.String)">
            <summary>Sends a file to the specified user.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SendMessage(System.String)">
            <summary>This method will send a message to the specified user.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SetReceiveStream(System.IO.Stream)">
            <summary>Sets the stream to which the received file data from will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SetSendStream(System.IO.Stream,System.String)">
            <summary>Sets the stream to be sent.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SetUserInfoField(System.String,System.String)">
            <summary>This method will add a user information field for registration.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.SubscribeTo(System.String)">
            <summary>Use this method to subscribe to another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.Unregister">
            <summary>This method cancels an account with the host.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Xmpp.UnsubscribeTo(System.String)">
            <summary>This method will cancel a subscription to another entity's presence.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnBuddyUpdate">
            <summary>This event is fired whenever a roster entry is updated.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnConnected">
            <summary>This event is fired when a connection to the IM Server is completed.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnDisconnected">
            <summary>This event is fired when the chat service connection is lost.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnEndTransfer">
            <summary>Fired when a file transfer completes.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnError">
            <summary>This event is fired when the server sends a protocol error message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnIQ">
            <summary>This event is fired for IQ messages not normally supported by the component.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnMessageIn">
            <summary>This event is fired upon receipt of a message.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnPITrail">
            <summary>This event is fired for all protocol messages.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnPresence">
            <summary>This event is fired when the presence of a subscribed entity changes.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnStartTransfer">
            <summary>Fired when a file transfer begins.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnSubscriptionRequest">
            <summary>This event fires when a subscription request is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnSync">
            <summary>This event fires upon a complete information synchronization with the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorks.Xmpp.OnTransfer">
            <summary>Fired during file transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Buddies">
            <summary>Collection of buddies in the buddy list.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.UserInfo">
            <summary>Collection of named registration fields.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.AuthDomain">
            <summary>The domain under which the user will be authenticated.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.AuthMethods">
            <summary>Controls how the component authenticates itself with the XMPP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Connected">
            <summary>This indicates the component's login status.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.IMPort">
            <summary>The server port for XMPP (default 5222).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.IMServer">
            <summary>This is the instant messaging server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.LocalDirectory">
            <summary>The directory to which received files are saved.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.LocalFile">
            <summary>The path to the file that will be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageHTML">
            <summary>This is the HTML version of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageOtherData">
            <summary>This property contains extra data elements for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageSubject">
            <summary>This is the subject of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageText">
            <summary>This is the plain text of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageThread">
            <summary>This is the thread name of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.MessageType">
            <summary>This is the type of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Password">
            <summary>This is the user's password.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Presence">
            <summary>This is the availability of the entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Resource">
            <summary>This is the resource for the current session.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.ServerDomain">
            <summary>The XMPP server's domain.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.SSLEnabled">
            <summary>Whether TLS/SSL is enabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Status">
            <summary>Description of the availability of this entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.User">
            <summary>The user portion of this entity's Jabber ID.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Xmpp.UserDomain">
            <summary>Gets or sets the domain value used for Jabber IDs.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.AtomChannel.#ctor">
            <summary>The information about an Atom Feed as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.AuthorEmail">
            <summary>This property contains the email address of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.AuthorName">
            <summary>This property contains the name of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.AuthorUri">
            <summary>This property contains the URI of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.CategoryLabel">
            <summary>This property contains a textual description of the label for the category.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.CategoryScheme">
            <summary>This property identifies a categorization scheme.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.CategoryTerm">
            <summary>This property contains the category to which the entry or feed belongs.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.ContributorEmail">
            <summary>This property contains the email address of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.ContributorName">
            <summary>This property contains the name of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.ContributorUri">
            <summary>This property contains the URI of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Generator">
            <summary>This property identifies the generator of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Icon">
            <summary>This property contains a reference to the image that represents this feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Id">
            <summary>The Id conveys a permanent, universally unique identifier for an entry or feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.LinkHref">
            <summary>This property contains the location of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.LinkHrefLang">
            <summary>This property contains the language of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.LinkLength">
            <summary>This property contains the length (in bytes) of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.LinkRel">
            <summary>This property indicates the relation of the linked content to the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.LinkTitle">
            <summary>This property contains the title of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.LinkType">
            <summary>This property contains the MIME type of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Logo">
            <summary>This property contains logo for an image that represents the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Rights">
            <summary>This property contains information about the rights of the given feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.RightsTextType">
            <summary>Text type of the rights of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Subtitle">
            <summary>This contains a short description of the Atom Feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.SubtitleTextType">
            <summary>This property contains the text type of the sub-title of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Title">
            <summary>This property contains the title of the current Atom Feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.TitleTextType">
            <summary>This property contains the text type of the title of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomChannel.Updated">
            <summary>This property contains the date and time that the feed was updated.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.HTTPCookie.#ctor">
            <summary>An HTTP cookie either sent to or received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.HTTPCookie.#ctor(System.String,System.String)">
            <summary>An HTTP cookie either sent to or received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTTPCookie.Domain">
            <summary>The domain of a received cookie.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTTPCookie.Expiration">
            <summary>This property contains an expiration time for the cookie (if provided by the server).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTTPCookie.Name">
            <summary>The name of the cookie.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTTPCookie.Path">
            <summary>This property contains a path name to limit the cookie to (if provided by the server).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTTPCookie.Secure">
            <summary>This property contains the security flag of the received cookie.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTTPCookie.Value">
            <summary>This property contains the value of the cookie.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.AtomEntry.#ctor">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.AtomEntry.#ctor(System.String)">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.AtomEntry.#ctor(System.String,System.String)">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.AtomEntry.#ctor(System.String,System.String,System.String)">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.AuthorEmail">
            <summary>This property contains the email address of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.AuthorName">
            <summary>This property contains the name of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.AuthorUri">
            <summary>This property contains the URI of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.CategoryLabel">
            <summary>This property contains a textual description of the label for the category.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.CategoryScheme">
            <summary>This property identifies a categorization scheme.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.CategoryTerm">
            <summary>This property contains the category to which the entry or feed belongs.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Content">
            <summary>This property contains the text contents of an Atom entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.ContentTextType">
            <summary>This property contains the text type of the content of the entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.ContributorEmail">
            <summary>This property contains the email address of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.ContributorName">
            <summary>This property contains the name of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.ContributorUri">
            <summary>This property contains the URI of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Copyright">
            <summary>This property is used a textual description of the copyright  statement for the current ATOM feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Created">
            <summary>This property contains a Date value that indicates the time that the current entry was created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.EntryXML">
            <summary>This property contains the full XML contents of the entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Id">
            <summary>The Id conveys a permanent, universally unique identifier for an entry or feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Issued">
            <summary>This property contains a Date value that indicates the time that the current entry was issued.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.LinkHref">
            <summary>This property contains the location of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.LinkHrefLang">
            <summary>This property contains the language of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.LinkLength">
            <summary>This property contains the length (in bytes) of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.LinkRel">
            <summary>This property indicates the relation of the linked content to the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.LinkTitle">
            <summary>This property contains the title of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.LinkType">
            <summary>This property contains the MIME type of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Modified">
            <summary>This property contains a Date value that indicates the time in  which the current entry was last modified.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Published">
            <summary>This property contains the date that the entry was first created.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Rights">
            <summary>This property contains information about the rights of the given entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.RightsTextType">
            <summary>Text type of the rights of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Source">
            <summary>This property is used when an entry has been copied from one feed to another feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Summary">
            <summary>This property contains a short textual description of the Atom entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.SummaryTextType">
            <summary>This property contains the text type of the summary of the entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Title">
            <summary>This property contains the title of the current Atom Feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.TitleTextType">
            <summary>This property contains the text type of the title of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.AtomEntry.Updated">
            <summary>This property contains the date and time that the feed was updated.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Firewall.#ctor">
            <summary>The firewall the component will connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Firewall.AutoDetect">
            <summary>This property tells the component whether or not to automatically detect and use firewall system settings, if available.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Firewall.FirewallType">
            <summary>This property determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Firewall.Host">
            <summary>This property contains the name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Firewall.Password">
            <summary>This property contains a password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Firewall.Port">
            <summary>This property contains the TCP port for the firewall Host .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Firewall.User">
            <summary>This property contains a user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMLNamespace.#ctor">
            <summary>An XML namespace from the current namespace stack.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMLNamespace.#ctor(System.String,System.String)">
            <summary>An XML namespace from the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLNamespace.Prefix">
            <summary>The Prefix for the Namespace .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLNamespace.URI">
            <summary>Namespace URI associated with the corresponding Prefix .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Header.#ctor">
            <summary>An HTTP header as it is received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Header.#ctor(System.String,System.String)">
            <summary>An HTTP header as it is received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Header.Field">
            <summary>This property contains the name of the HTTP header (same case as it is delivered).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Header.Value">
            <summary>This property contains the header contents.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Proxy.#ctor">
            <summary>The proxy the component will connect to.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Proxy.#ctor(System.String,System.Int32)">
            <summary>The proxy the component will connect to.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Proxy.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>The proxy the component will connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Proxy.AuthScheme">
            <summary>This property is used to tell the component which  type of authorization to perform when connecting to the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Proxy.AutoDetect">
            <summary>This property tells the component whether or not to automatically detect and use proxy system settings, if available.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Proxy.Password">
            <summary>This property contains a password if authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Proxy.Port">
            <summary>This property contains the TCP port for the proxy Server (default 80).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Proxy.Server">
            <summary>If a proxy Server is given, then the HTTP request is sent to the proxy instead of the server otherwise specified.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Proxy.SSL">
            <summary>This property determines when to use SSL for the connection to the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Proxy.User">
            <summary>This property contains a user name, if authentication is to be used for the proxy.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(System.String)">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(System.Byte[])">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(nsoftware.IPWorks.CertStoreTypes,System.String,System.String,System.String)">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(nsoftware.IPWorks.CertStoreTypes,System.String,System.String,System.String,System.String)">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(nsoftware.IPWorks.CertStoreTypes,System.String,System.String,System.Byte[])">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(nsoftware.IPWorks.CertStoreTypes,System.Byte[],System.String,System.String)">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(nsoftware.IPWorks.CertStoreTypes,System.Byte[],System.String,System.String,System.String)">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Certificate.#ctor(nsoftware.IPWorks.CertStoreTypes,System.Byte[],System.String,System.Byte[])">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.EffectiveDate">
            <summary>The date which this certificate becomes valid.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.EncodedB">
            <summary>The certificate (PEM/base64 encoded).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.Encoded">
            <summary>The certificate (PEM/base64 encoded).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.ExpirationDate">
            <summary>The date the certificate expires.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.ExtendedKeyUsage">
            <summary>A comma-delimited list of extended key usage identifiers.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.Fingerprint">
            <summary>The hex-encoded, 16-byte MD5 fingerprint of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.Issuer">
            <summary>The issuer of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.PrivateKey">
            <summary>The private key of the certificate (if available).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.PrivateKeyAvailable">
            <summary>Shows whether a PrivateKey is available for the  selected certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.PrivateKeyContainer">
            <summary>The name of the PrivateKey container for the  certificate (if available).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.PublicKey">
            <summary>The public key of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.PublicKeyAlgorithm">
            <summary>Textual description of the public key algorithm of the  certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.PublicKeyLength">
            <summary>The length of the certificate public key (in bits).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.SerialNumber">
            <summary>The serial number of the certificate encoded as a  string.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.SignatureAlgorithm">
            <summary>Text description of the signature algorithm of the  certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.StoreB">
            <summary>The name of the certificate store for the client certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.Store">
            <summary>The name of the certificate store for the client certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.StorePassword">
            <summary>If the certificate store is of a type that requires  a password, this property is used to specify that  password in order to open the certificate store.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.StoreType">
            <summary>The type of certificate store for this certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.Subject">
            <summary>The subject of the certificate used for client authentication.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.SubjectAltNames">
            <summary>A comma-separated lists of alternative subject names of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.ThumbprintMD5">
            <summary>MD5 hash of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.ThumbprintSHA1">
            <summary>SHA1 hash of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.ThumbprintSHA256">
            <summary>SHA256 hash of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.Usage">
            <summary>Text description of UsageFlags .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.UsageFlags">
            <summary>Flags that show intended use for the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Certificate.Version">
            <summary>The certificate's version number.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalAlarm.#ctor">
            <summary>An alarm related to a calendar event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalAlarm.#ctor(System.String,nsoftware.IPWorks.Actions)">
            <summary>An alarm related to a calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Action">
            <summary>This property determines what the CalDAV server will do when the alarm Trigger is reached.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Attachment">
            <summary>This property contains a sound file attached to the alarm.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.AttachmentType">
            <summary>This property contains the MIME-Type of the attachment.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Duration">
            <summary>This property contains the interval between repeating alarms.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Message">
            <summary>This property contains a message used to alert the user when this alarm is triggered.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Recipient">
            <summary>This property contains the email address of the person to be alerted when this alarm is triggered.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Repeat">
            <summary>This property contains the number of times the alarm is to be repeated after the initial trigger.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Subject">
            <summary>This property contains the subject of the message used to alert the user when this alarm is triggered.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalAlarm.Trigger">
            <summary>This property contains the time when the alarm is triggered.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalCustomProp.#ctor">
            <summary>Name/Value pair of custom properties to add to the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalCustomProp.#ctor(System.String,System.String)">
            <summary>Name/Value pair of custom properties to add to the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalCustomProp.#ctor(System.String,System.String,System.String)">
            <summary>Name/Value pair of custom properties to add to the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalCustomProp.Attribute">
            <summary>This property contains an optional attribute of the custom property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalCustomProp.Name">
            <summary>This property contains the textual name of the custom property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalCustomProp.Value">
            <summary>This property contains the value of the custom property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalFreeBusy.#ctor">
            <summary>Describes a single free/busy element in the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalFreeBusy.BusyRange">
            <summary>Contains the date/time range when the calendar owner is busy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalFreeBusy.BusyType">
            <summary>Indicates the busy status of the corresponding BusyRange .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalLock.#ctor">
            <summary>Group of fields used when locking and unlocking a calendar resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalLock.LockType">
            <summary>The type of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalLock.Owner">
            <summary>The principle that owns the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalLock.Scope">
            <summary>The scope of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalLock.Timeout">
            <summary>The time to live for the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalLock.Tokens">
            <summary>The lock string to be used when submitting operations on a locked resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalRecurrence.#ctor">
            <summary>Defines the recurrence set for an event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalRecurrence.Dates">
            <summary>Individual dates on which the event will recur.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalRecurrence.ExceptionDates">
            <summary>Defines the list of DATE-TIME exceptions to the recurrence set.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalRecurrence.ExceptionRule">
            <summary>Defines a rule or repeating pattern for an exception to the recurrence set.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalRecurrence.RecurrenceId">
            <summary>Identifies a recurring event.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalRecurrence.Rule">
            <summary>This property defines the recurrence rule for the event.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalReportFilter.#ctor">
            <summary>Used to restrict the results of a Report returned from the CalDAV server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.AlarmEnd">
            <summary>Limits the events returned in the report to only those with an alarm set in the range specified by AlarmStart and AlarmEnd .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.AlarmStart">
            <summary>Limits the events returned in the report to only those with an alarm set in the range specified by AlarmStart and AlarmEnd .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.CustomFilter">
            <summary>Allows the user to specify his own filter XML.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.EndDate">
            <summary>Limits the events returned in the report to only those which occur in the time range specified by StartDate and EndDate .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.EventType">
            <summary>Indicates the type of calendar object resources to return in a Report.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.Property">
            <summary>Limits the events returned in a Report to only those which contain a matching property name and value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.RecurEnd">
            <summary>Limits the recurring events returned in the report.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.RecurStart">
            <summary>Limits the recurring events returned in the report.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.ReturnCalendarData">
            <summary>Controls whether the contents of each calendar event is returned in the report.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.StartDate">
            <summary>Limits the events returned in the report to only those which occur in the time range specified  by StartDate and EndDate .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalReportFilter.UID">
            <summary>Limits the recurring events returned in the report to only those with the specified UID.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CalTimezone.#ctor">
            <summary>Specifies a time zone on a calendar collection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.DSTName">
            <summary>The customary name for the daylight-savings time zone.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.DSTOffsetFrom">
            <summary>The UTC offset that is in use when the onset of this time zone observance begins.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.DSTOffsetTo">
            <summary>The UTC offset for daylight savings time, when this observance is in use.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.DSTRule">
            <summary>This property defines the recurrence rule for the onset of this daylight savings time observance.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.DSTStart">
            <summary>The effective onset date and local time for the daylight-time time zone definition.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.LastModified">
            <summary>This optional property is a UTC value that specifies the date and time that this time zone definition was last updated.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.StdName">
            <summary>The customary name for the standard time zone.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.StdOffsetFrom">
            <summary>The UTC offset that is in use when the onset of this time zone observance begins.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.StdOffsetTo">
            <summary>The UTC offset for standard time, when this observance is in use.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.StdRule">
            <summary>This property defines the recurrence rule for the onset of this standard time observance.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.StdStart">
            <summary>The effective onset date and local time for the standard-time time zone definition.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.TimezoneId">
            <summary>This property specifies a text value that uniquely identifies this CalTimezone calendar component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CalTimezone.URL">
            <summary>Optionally points to a published time zone definition.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.CertExtension.#ctor(System.String,System.Byte[],System.Boolean)">
            <summary>Represents an extension for a certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CertExtension.Critical">
            <summary>Whether or not the extension is defined as critical.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CertExtension.OID">
            <summary>The ASN.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CertExtension.ValueB">
            <summary>The raw value of this certificate extension.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.CertExtension.Value">
            <summary>The raw value of this certificate extension.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.DNSRecord.#ctor">
            <summary>A record that is returned by the DNS server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.Domain">
            <summary>This property contains the domain name associated with the  selected response record, at RecordIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.FieldCount">
            <summary>This property contains the number of fields in the current record.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.FieldIndex">
            <summary>This property contains the index of the selected field of the current record.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.FieldName">
            <summary>This property contains the name of the field selected by FieldIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.FieldValueB">
            <summary>This property contains the value of the field selected by FieldIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.FieldValue">
            <summary>This property contains the value of the field selected by FieldIndex .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.RecordDataB">
            <summary>This property contains the full record data as received from the DNS server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.RecordData">
            <summary>This property contains the full record data as received from the DNS server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.RecordType">
            <summary>This property contains the record type.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.RecordTypeName">
            <summary>This property contains the string representation of the current record type defined by RecordType .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DNSRecord.TTL">
            <summary>This property contains the record Time To Live (TTL) value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileAttachment.#ctor">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileAttachment.#ctor(System.String)">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileAttachment.#ctor(System.String,System.String)">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileAttachment.#ctor(System.String,System.IO.Stream)">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileAttachment.#ctor(System.String,System.IO.Stream,System.String)">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileAttachment.File">
            <summary>This property contains the path of a file on your system that you would like to send as an attachment with your message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileAttachment.InputStream">
            <summary>When this property is set to a valid stream, the component will attach the data from the stream as the current attachment.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileAttachment.Name">
            <summary>This property contains the name of the attachment to be sent.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MessageRecipient.#ctor">
            <summary>A recipient of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MessageRecipient.#ctor(System.String)">
            <summary>A recipient of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MessageRecipient.#ctor(System.String,System.Int32)">
            <summary>A recipient of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageRecipient.Address">
            <summary>This field contains the email address of the recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageRecipient.Name">
            <summary>This field contains name of the recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageRecipient.Options">
            <summary>This field contains the recipient sending options (used only by SMTP).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageRecipient.RecipientType">
            <summary>This field contains the recipient type: To, Cc, or BCc.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.DirEntry.#ctor">
            <summary>A listing in a directory returned from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DirEntry.Entry">
            <summary>This property contains the raw entry as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DirEntry.FileName">
            <summary>This property shows the file name in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DirEntry.FileSize">
            <summary>This property shows the file size in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DirEntry.FileTime">
            <summary>This property shows the file time in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DirEntry.IsDir">
            <summary>This property specifies whether entries in the last directory listing are directories.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.HTMLImage.#ctor">
            <summary>This type describes an HTML embedded image.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.HTMLImage.#ctor(System.String)">
            <summary>This type describes an HTML embedded image.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTMLImage.DataB">
            <summary>This property optionally specifies the image data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTMLImage.Data">
            <summary>This property optionally specifies the image data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTMLImage.File">
            <summary>This property contains the name of the image files embedded into the HTML message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTMLImage.Id">
            <summary>This property contains the content identifier for embedded images.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.HTMLImage.ImageType">
            <summary>This property contains the content type for embedded images.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Mailbox.#ctor">
            <summary>Mailboxes collected when calling <b>ListMailboxes</b> or <b>ListSubscribedMailboxes</b> .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mailbox.Flags">
            <summary>The mailbox flags in a mailbox listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mailbox.Name">
            <summary>The mailbox name in a mailbox listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Mailbox.Separator">
            <summary>The Separator field contains the character that  separates the different parts in the mailbox path hierarchy.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MessageInfo.#ctor">
            <summary>This is a listing of information for a message returned by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageInfo.Date">
            <summary>The date of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageInfo.Flags">
            <summary>Message flag in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageInfo.From">
            <summary>The sender of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageInfo.MessageId">
            <summary>The unique identifier of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageInfo.Size">
            <summary>The size of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessageInfo.Subject">
            <summary>The subject of a message in a message info listing.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MessagePart.#ctor">
            <summary>A message part of a message listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.ContentDisposition">
            <summary>This field shows the value of the Content-Disposition header of the message part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.ContentEncoding">
            <summary>This field shows how the data is encoded.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.ContentId">
            <summary>This field shows the value of the Content-Id header of the message part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.ContentType">
            <summary>This field shows the type of data contained in the message part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.Filename">
            <summary>This field shows the filename corresponding  to the part (if the part was included in the message as  an attached file).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.Id">
            <summary>This field contains the identifier of a part listing which  may be identified in other parts or messages.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.MultipartMode">
            <summary>This field shows how this part  relates to the message's whole multipart structure  ('mixed', 'alternative', etc.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.Parameters">
            <summary>This field contains the additional parameters passed  to the ContentType header such as the part charset etc.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MessagePart.Size">
            <summary>This field contains the size of a part in a message part listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.AcceptData">
            <summary>Setting this property to False, temporarily disables data reception (and the DataIn event) on the connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.BytesSent">
            <summary>This property shows how many bytes were sent after the last assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.Connected">
            <summary>This property is used to disconnect individual connections and/or show their status.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.ConnectionId">
            <summary>This property contains an identifier generated by the component to identify each connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.DataToSendB">
            <summary>This property contains a string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.DataToSend">
            <summary>This property contains a string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.EOLB">
            <summary>The EOL property is used to define boundaries in the input stream using the value of the property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.EOL">
            <summary>The EOL property is used to define boundaries in the input stream using the value of the property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.IdleTimeout">
            <summary>The idle timeout for this connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.LocalAddress">
            <summary>This property shows the IP address of the interface through which the connection is passing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.MaxLineLength">
            <summary>This property is the size of an internal buffer which holds received data while waiting for an EOL string.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.ReadyToSend">
            <summary>Indicates whether the component is ready to send data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.RecordLength">
            <summary>If set to a positive value, this setting defines the length of data records to be received.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.RemoteHost">
            <summary>This property shows the IP address of the remote host through which the connection is coming.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.RemotePort">
            <summary>This property shows the TCP port on the remote host through which the connection is coming.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.SingleLineMode">
            <summary>This property shows the special mode for line-oriented protocols.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.Timeout">
            <summary>This property contains a timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.UploadStream">
            <summary>Setting this property uploads the data in the specified stream to the current connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.UserDataB">
            <summary>The UserData property holds connection specific user specified data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Connection.UserData">
            <summary>The UserData property holds connection specific user specified data.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.JSONElement.#ctor">
            <summary>An element contained within the JSON document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.JSONElement.Name">
            <summary>The Name property provides the name of the element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.JSONElement.XText">
            <summary>This property contains the text of the element.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Comment.#ctor">
            <summary>A comment within the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.Comment.#ctor(System.String)">
            <summary>A comment within the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.Comment.Text">
            <summary>This property holds the comment text.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.LDAPAttribute.#ctor">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.LDAPAttribute.#ctor(System.String)">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.LDAPAttribute.#ctor(System.String,System.String)">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.LDAPAttribute.#ctor(System.String,System.String,nsoftware.IPWorks.LDAPAttributeModOps)">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.LDAPAttribute.AttributeType">
            <summary>Attribute type for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.LDAPAttribute.ModOp">
            <summary>An operation to apply on attributes during an LDAP modify operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.LDAPAttribute.ValueB">
            <summary>Attribute value for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.LDAPAttribute.Value">
            <summary>Attribute value for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.LDAPReference.#ctor">
            <summary>A reference returned from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.LDAPReference.URL">
            <summary>The url of the LDAP reference.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MIMEPart.#ctor">
            <summary>A part of the MIME message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MIMEPart.#ctor(System.String)">
            <summary>A part of the MIME message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MIMEPart.#ctor(System.Byte[])">
            <summary>A part of the MIME message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MIMEPart.#ctor(System.IO.Stream)">
            <summary>A part of the MIME message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.MIMEPart.#ctor(System.IO.Stream,System.String)">
            <summary>A part of the MIME message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.ContentDisposition">
            <summary>Content disposition for each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.ContentDispositionAttr">
            <summary>The content disposition's attribute (if any) for each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.ContentId">
            <summary>Content identifier for each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.ContentType">
            <summary>Content type for each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.ContentTypeAttr">
            <summary>The content type attribute, if any, for each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.DecodedFile">
            <summary>The filename with the decoded data.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.DecodedStringB">
            <summary>This field holds the actual content of each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.DecodedString">
            <summary>This field holds the actual content of each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.Encoding">
            <summary>This field contains the actual content encoding type for each part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.Filename">
            <summary>This field contains the filename attribute specified in the headers of the part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.Headers">
            <summary>This field contains the headers for each MIME part.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.Name">
            <summary>This field contains the name given to a part, such as the filename.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.PartInputStream">
            <summary>This field contains a stream which contains the actual content of each part before the message is encoded.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.PartOutputStream">
            <summary>The component decodes the actual part of Message when this field's  value is first set, and writes the decoded value to the stream.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.MIMEPart.Size">
            <summary>This field contains the size of the DecodedFile or DecodedString .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ArticleInfo.#ctor">
            <summary>An article listed as a result of a <b>GroupOverview</b> or <b>GroupSearch</b> .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.ArticleLines">
            <summary>The number of lines of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.ArticleNumber">
            <summary>The number of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.ArticleSize">
            <summary>The size of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.Date">
            <summary>The date of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.From">
            <summary>The sender of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.MessageId">
            <summary>The unique message id of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.OtherHeaders">
            <summary>The remaining headers of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.References">
            <summary>The references of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ArticleInfo.Subject">
            <summary>The subject of an article in a newsgroup overview.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.GroupInfo.#ctor">
            <summary>A group listed by the NNTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.GroupInfo.CanPost">
            <summary>This property indicates whether a group in a newsgroup listing allows postings or articles.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.GroupInfo.FirstArticle">
            <summary>This property shows the first available article in a newsgroup listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.GroupInfo.Group">
            <summary>This property shows the group name in a newsgroup listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.GroupInfo.LastArticle">
            <summary>This property shows the last available article in a newsgroup listing.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.OAuthParam.#ctor">
            <summary>The parameter to be used in the request, or received in the response.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.OAuthParam.#ctor(System.String,System.String)">
            <summary>The parameter to be used in the request, or received in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.OAuthParam.Name">
            <summary>This field contains the name of the parameter to be used in the request or returned in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.OAuthParam.Value">
            <summary>This field contains the value of the parameter to be used in the request or returned in the response.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ODataEntryLink.#ctor">
            <summary>An object representing a single OData entry link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryLink.ResourcePath">
            <summary>The Resource Path of the OData entry element link.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryLink.Title">
            <summary>The Title of the OData entry element link.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ODataEntryProperty.#ctor">
            <summary>An object representing a single OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ODataEntryProperty.#ctor(System.String,System.String)">
            <summary>An object representing a single OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ODataEntryProperty.#ctor(System.String,System.String,System.String)">
            <summary>An object representing a single OData entry property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryProperty.Attributes">
            <summary>A space-separated list of attributes (name-value pairs) contained within an OData entry element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryProperty.IsNull">
            <summary>Indicates whether a property value of a primitive type is null.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryProperty.Name">
            <summary>The Name of the OData entry element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryProperty.Type">
            <summary>The type of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryProperty.Value">
            <summary>The Value of the OData entry element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataEntryProperty.XPath">
            <summary>The XPath of the OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ODataSchemaAssociation.#ctor">
            <summary>An object representing a single OData schema navigation property and its corresponding association.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.ContainsTarget">
            <summary>Whether the navigation property contains a target.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.Description">
            <summary>The documentation long description of the OData schema association.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.FromRole">
            <summary>The name of the starting point of the navigation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.FromRoleDescription">
            <summary>The documentation long description of the OData schema FromRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.FromRoleEntity">
            <summary>The name of the entity that FromRole association end point maps to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.FromRoleMultiplicity">
            <summary>The multiplicity of the FromRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.FromRoleSummary">
            <summary>The documentation summary of the OData schema FromRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.Name">
            <summary>The Name of the OData schema navigation property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.Nullable">
            <summary>Whether the property defined by the schema can be a null value.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.OnDelete">
            <summary>The delete action to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.Partner">
            <summary>The partner value identifying a navigation property (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.RefConstraintCount">
            <summary>The number of referential constraints.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.RefConstraintIndex">
            <summary>The current index of the referential constraint.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.RefConstraintProperty">
            <summary>The property that takes part in the referential constraint.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.RefConstraintReferencedProperty">
            <summary>The corresponding property of the principal entity type.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.Relationship">
            <summary>The name of the relationship (association) of the navigation property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.Summary">
            <summary>The documentation summary of the OData schema association.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.ToRole">
            <summary>The name of the end point of the navigation.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.ToRoleDescription">
            <summary>The documentation long description of the OData schema ToRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.ToRoleEntity">
            <summary>The name of the entity that ToRole association end point maps to.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.ToRoleMultiplicity">
            <summary>The multiplicity of the ToRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.ToRoleSummary">
            <summary>The documentation summary of the OData schema ToRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaAssociation.Type">
            <summary>The entity type.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ODataSchemaEntity.#ctor">
            <summary>An object representing a single OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaEntity.Description">
            <summary>The documentation long description of the OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaEntity.Name">
            <summary>The name of the OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaEntity.Summary">
            <summary>The documentation summary of the OData schema entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.ODataSchemaProperty.#ctor">
            <summary>An object representing a single OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaProperty.Attributes">
            <summary>A space-separated list of attributes (name-value pairs) contained within an OData property element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaProperty.Description">
            <summary>The documentation long description of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaProperty.IsComplexType">
            <summary>Indicates whether a property is derived from a complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaProperty.Name">
            <summary>The Name of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaProperty.Nullable">
            <summary>Indicates whether a property can be null.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaProperty.Summary">
            <summary>The documentation summary of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.ODataSchemaProperty.Type">
            <summary>The type of the OData schema property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMLAttribute.#ctor">
            <summary>An XML attribute from the current XML element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLAttribute.Name">
            <summary>The Name provides the local name (without prefix)  of the attribute.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLAttribute.Namespace">
            <summary>Attribute namespace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLAttribute.Prefix">
            <summary>Attribute prefix (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLAttribute.Value">
            <summary>Attribute value.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMLElement.#ctor">
            <summary>An element contained within the XML document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLElement.Name">
            <summary>The Name field provides the local name (without prefix) of the element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLElement.Namespace">
            <summary>Namespace of the element.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLElement.Prefix">
            <summary>Prefix of the element (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLElement.XText">
            <summary>The inner text of the element.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.RSSChannel.#ctor">
            <summary>The information about an RSS Feed as received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.RSSChannel.#ctor(System.String,System.String)">
            <summary>The information about an RSS Feed as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Category">
            <summary>The value of this property is a forward-slash-separated string that identifies a hierarchic location in a particular hierarchy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.CategoryDomain">
            <summary>This property contains the URL indicating the definition of the current RSS channel's category.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Copyright">
            <summary>This property contains the copyright information for the current RSS channel (500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Description">
            <summary>This property contains a textual description of the current RSS feed (Required - 500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Docs">
            <summary>This should contain a URL for the documentation describing what format was used to create the current RSS channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Generator">
            <summary>This property contains the name of the program which created the RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.ImageDescription">
            <summary>This property is used to specify text that is  included in the title attribute of the image's link  formed in HTML rendering.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.ImageHeight">
            <summary>This property contains the height of the image in pixels.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.ImageLink">
            <summary>This property contains the URL associated with the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.ImageTitle">
            <summary>This property contains the title of the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.ImageUrl">
            <summary>This property contains the URL location of the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.ImageWidth">
            <summary>This property contains the width of the image in pixels.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Language">
            <summary>This property is required for feeds that conform to version 0.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.LastBuildDate">
            <summary>This property contains the date of the current RSS channel's most recent content changes.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Link">
            <summary>This property contains the URL that corresponds to the website  where the RSS channel is located (Required - 500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.ManagingEditor">
            <summary>This property contains the email address or contact information for the current RSS channel's editor.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.PubDate">
            <summary>This property contains the date of the current RSS channel's most recent publication.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.SkipDays">
            <summary>This property contains a list of days in which aggregators may skip reading  the channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.SkipHours">
            <summary>This property contains a list of hours in which aggregators may skip reading  the channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Title">
            <summary>This property contains the title of the current RSS Feed (Required - 40 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.Ttl">
            <summary>This property contains a number of minutes that represents  how long the channel may be cached before it needs to be  refreshed from the source.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSChannel.WebMaster">
            <summary>This property contains the email address or contact information for the current RSS channel's webmaster.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.RSSItem.#ctor">
            <summary>An RSS item as it is received from the RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.RSSItem.#ctor(System.String,System.String)">
            <summary>An RSS item as it is received from the RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Author">
            <summary>This property contains the email address or contact information for the current item's author.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Category">
            <summary>This property contains the location of the current item within a hierarchy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.CategoryDomain">
            <summary>This property contains the URL indicating the definition of the current item's category.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Comments">
            <summary>If present, this property should point to a URL location of a  page for comments related to the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Description">
            <summary>This property contains the description of the content of the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.EnclosureLength">
            <summary>This property indicates how large the enclosure is in bytes.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.EnclosureType">
            <summary>This property specifies the type of enclosure.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.EnclosureUrl">
            <summary>This property contains the URL where the enclosure is located.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Guid">
            <summary>This property contains the globally unique identifier for the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.GuidIsPermaLink">
            <summary>When this property is set to true, the reader may assume that the guid is a permalink to the item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.ItemXML">
            <summary>This property contains the full XML contents of the item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Link">
            <summary>For headline or abstract items, this property should be the location of the full text of the item.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.PubDate">
            <summary>This property contains the date of the current item's most recent publication.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Source">
            <summary>This property contains the name of the RSS feed in which the item was originally published, derived from the feed's title.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.SourceURL">
            <summary>This property contains the URL location of the XML-version of the current item's source.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.RSSItem.Title">
            <summary>This property contains the title or headline of the current item.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.SMPPRecipient.#ctor">
            <summary>A recipient of the SMPP message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.SMPPRecipient.#ctor(System.String)">
            <summary>A recipient of the SMPP message.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.SMPPRecipient.#ctor(System.String,System.Int32)">
            <summary>A recipient of the SMPP message.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.SMPPRecipient.Address">
            <summary>This property contains the email address of a particular recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.SMPPRecipient.RecipientType">
            <summary>This property contains the type of a particular recipient.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.SOAPParam.#ctor">
            <summary>A parameter for the SOAP <b>Method</b> .</summary>
        </member>
        <member name="M:nsoftware.IPWorks.SOAPParam.#ctor(System.String,System.String)">
            <summary>A parameter for the SOAP <b>Method</b> .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.SOAPParam.Attrs">
            <summary>Extra attributes for the parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.SOAPParam.Name">
            <summary>The name of the Method parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.SOAPParam.Value">
            <summary>The value of the Method parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.TraceHop.#ctor">
            <summary>A hop in the route to the destination.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.TraceHop.ErrorCode">
            <summary>The error code for particular hop in the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.TraceHop.ErrorDescription">
            <summary>The error description for particular hop in the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.TraceHop.HostAddress">
            <summary>The IP address of the host for a particular hop in the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.TraceHop.HostName">
            <summary>The name of the host for a particular hop in the trace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.TraceHop.Time">
            <summary>The amount of time taken by a particular hop in the trace.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.DAVProperty.#ctor">
            <summary>A property that is either sent to or received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.DAVProperty.#ctor(System.String)">
            <summary>A property that is either sent to or received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVProperty.Attr">
            <summary>This property shows the attribute string for the specified DAV property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVProperty.Name">
            <summary>This property shows the name of the DAV property sent to or received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVProperty.NamespaceURI">
            <summary>This property shows the DAV property namespace.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVProperty.Operation">
            <summary>This property shows the operation to perform on a property when calling PatchProperties .</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVProperty.Status">
            <summary>This property shows the status of the retrieved DAV property.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVProperty.Value">
            <summary>This property shows the value of the DAV property.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.DAVResource.#ctor">
            <summary>A resource as returned in a directory listing from the WebDAV component.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVResource.ContentLanguage">
            <summary>This property shows the language of the resource being returned.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVResource.ContentLength">
            <summary>This property shows the length of the resource returned.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVResource.ContentType">
            <summary>This property shows the type of the resource being returned.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVResource.DisplayName">
            <summary>This property shows the name of the resource being listed.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVResource.LastModified">
            <summary>This property shows the date/time stamp of the last time the resource was modified.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.DAVResource.ResourceURI">
            <summary>This property shows the URI of the resource being returned.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FormVar.#ctor">
            <summary>The form variable for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FormVar.#ctor(System.String,System.String)">
            <summary>The form variable for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FormVar.ContentType">
            <summary>This property specifies the Content-Type header for a Form Variable.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FormVar.Name">
            <summary>This property contains the form variable name for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FormVar.Value">
            <summary>This property contains the form variable value for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileVar.#ctor">
            <summary>The file variable for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileVar.#ctor(System.String,System.String)">
            <summary>The file variable for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileVar.#ctor(System.String,System.IO.Stream)">
            <summary>The file variable for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.FileVar.#ctor(System.String,System.Byte[])">
            <summary>The file variable for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileVar.ContentType">
            <summary>This property contains the value of the Content-Type of each form variable which corresponds to the file in the File field.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileVar.File">
            <summary>This property contains the path and filename of each file to be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileVar.InputDataB">
            <summary>Specifies the file data to be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileVar.InputData">
            <summary>Specifies the file data to be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileVar.InputStream">
            <summary>This property is set when a stream is to be used for the data of the current filevar.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.FileVar.Name">
            <summary>This property contains the name of each form variable which corresponds to the file in the File field.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMLDeclaration.#ctor">
            <summary>The XML declaration present at the beginning of a document.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMLDeclaration.#ctor(System.String,System.String,System.Boolean)">
            <summary>The XML declaration present at the beginning of a document.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLDeclaration.Encoding">
            <summary>This property specifies the XML encoding to use.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLDeclaration.Standalone">
            <summary>This property indicates whether the standalone attribute is present in the declaration with a value of true.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMLDeclaration.Version">
            <summary>This property specifies the XML version.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMPPBuddy.#ctor">
            <summary>A buddy in the XMPP buddy list.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMPPBuddy.Group">
            <summary>This is a comma-separated list of the buddy's associated groups.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMPPBuddy.Id">
            <summary>This is the jabber id of the buddy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMPPBuddy.NickName">
            <summary>The nickname of the buddy, if one exists.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMPPBuddy.RealName">
            <summary>The real name of the buddy.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMPPBuddy.Subscription">
            <summary>This is a list of the subscription status for the buddy.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMPPUserInfo.#ctor">
            <summary>A named registration field.</summary>
        </member>
        <member name="M:nsoftware.IPWorks.XMPPUserInfo.#ctor(System.String,System.String)">
            <summary>A named registration field.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMPPUserInfo.Field">
            <summary>This is the name of the current field necessary for registration.</summary>
        </member>
        <member name="P:nsoftware.IPWorks.XMPPUserInfo.Value">
            <summary>This is the value for the current registration field, and should be set after calling QueryRegister and before calling Register .</summary>
        </member>
    </members>
</doc>
