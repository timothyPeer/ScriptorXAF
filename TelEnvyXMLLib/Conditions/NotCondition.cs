// ***********************************************************************
// Assembly         : TeLXmlLib
// Author           : Timothy Peer
// Created          : 01-27-2018
//
// Last Modified By : Timothy Peer
// Last Modified On : 01-27-2018
// ***********************************************************************
// <copyright file="NotCondition.cs" company="eNVy Systems, Inc.">
//     Copyright © eNVy Systems, Inc. 2011
// </copyright>
// <summary></summary>
// ***********************************************************************
using System;
using System.Xml;

namespace TelEnvyXmlLib.Conditions
{
    #region Documentation
    /// Class NotCondition.
    ///
    /// \author Timothy Peer, eNVy Systems Inc.
    /// \date   6/26/2019
    ///
    /// \sa TelEnvyXmlLib.Conditions.LogicalCondition
    /// <autogeneratedoc />
    /// //
    #endregion

    ///-------------------------------------------------------------------------------------------------
    /// <summary>   A not condition. </summary>
    ///
    /// <remarks>   Timothy Peer, eNVy Systems Inc., 6/26/2019. </remarks>
    ///
    /// <seealso cref="T:TelEnvyXmlLib.Conditions.LogicalCondition"/>
    ///-------------------------------------------------------------------------------------------------

    public class NotCondition : LogicalCondition
    {
        #region Documentation
        /// Initializes a new instance of the <see cref="NotCondition" /> class.
        ///
        /// \author Timothy Peer, eNVy Systems Inc.
        /// \date   6/26/2019
        ///
        /// \exception  TeLInvalidDataFormatException   Thrown when a Te L Invalid Data Format error
        ///                                             condition occurs.
        ///
        /// \param  node    The node.
        ///
        /// ### exception   TelEnvyXmlLib.Exceptions.TeLInvalidDataFormatException  .
        #endregion

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Initializes a new instance of the TelEnvyXmlLib.Conditions.NotCondition class.
        ///             </summary>
        ///
        /// <remarks>   Timothy Peer, eNVy Systems Inc., 6/26/2019. </remarks>
        ///
        /// <exception cref="TeLInvalidDataFormatException"> Thrown when a Te L Invalid Data Format error
        ///                                                  condition occurs.</exception>
        ///
        /// <param name="node"> The node.</param>
        ///-------------------------------------------------------------------------------------------------

        public NotCondition(XmlNode node)
            : base(node, TelEnvyXmlLib.Enums.IfConditionType.Not)
        {
            if (ChildConditions.Count != 1)
                throw new TelEnvyXmlLib.Exceptions.TeLInvalidDataFormatException(string.Format("<IfCondition Type=\"{0}\"> requires one child node of type <IfCondition>.", ConditionType));
        }

        #region Documentation
        /// Initializes a new instance of the <see cref="NotCondition"/> class.
        ///
        /// \author Timothy Peer, eNVy Systems Inc.
        /// \date   6/26/2019
        ///
        /// \param  node    The node.
        /// \param  type    The type.
        ///
        /// ### exception   TelEnvyXmlLib.Exceptions.TeLInvalidDataFormatException  .
        #endregion

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Initializes a new instance of the TelEnvyXmlLib.Conditions.NotCondition class.
        ///             </summary>
        ///
        /// <remarks>   Timothy Peer, eNVy Systems Inc., 6/26/2019. </remarks>
        ///
        /// <param name="node"> The node.</param>
        /// <param name="type"> The type.</param>
        ///-------------------------------------------------------------------------------------------------

        public NotCondition(XmlNode node, TelEnvyXmlLib.Enums.IfConditionType type)
            : base(node, type)
        {

        }

    }
}
